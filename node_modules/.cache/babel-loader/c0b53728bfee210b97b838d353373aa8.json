{"ast":null,"code":"var _jsxFileName = \"H:\\\\Projects\\\\package\\\\cheerio\\\\src\\\\jsx\\\\layout\\\\profile-chart.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport TradingViewWidget from 'react-tradingview-widget';\nimport { Themes } from 'react-tradingview-widget';\nimport axios from 'axios';\nimport Loader from 'react-loader-spinner';\n\nfunction ProfileChart({\n  selectedChart\n}) {\n  const base = \"http://127.0.0.1:5000/cryptocurrency/quotes/latest?symbol=\";\n  const [info, setInfo] = useState({});\n  useEffect(() => {\n    setInfo({});\n    axios.get(base + selectedChart).then(res => {\n      const {\n        data\n      } = res.data;\n      setInfo(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }, [selectedChart]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card profile_chart transparent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-body p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minHeight: 400 + \"px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TradingViewWidget, {\n    symbol: selectedChart,\n    theme: Themes.DARK,\n    locale: \"fa_IR\",\n    width: \"100%\",\n    height: 400,\n    hide_top_toolbar: true,\n    allow_symbol_change: false,\n    withdateranges: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chart-content text-center mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, [[\"price\", \"قیمت\", \"$\"], [\"volume_24h\", \"حجم 24 ساعته\", \"$\"], [\"market_cap\", \"حجم بازار\", \"$\"], [\"percent_change_1h\", \"درصد تغییر 1 ساعته\", \"%\"], [\"percent_change_24h\", \"درصد تغییر 24 ساعته\", \"%\"], [\"percent_change_7d\", \"درصد تغییر 7 روزه\", \"%\"]].map((item, idx) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: idx,\n      className: \"col-xl-4 col-sm-6 col-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chart-stat\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"mb-1 fs-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 37\n      }\n    }, item[1]), Object.keys(info).includes(selectedChart) ? /*#__PURE__*/React.createElement(\"strong\", {\n      dir: \"ltr\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 41\n      }\n    }, Number(info[selectedChart][\"quote\"][\"USD\"][item[0]]).toLocaleString(), \" \", \" \", \" \", item[2]) : /*#__PURE__*/React.createElement(Loader, {\n      type: \"TailSpin\",\n      color: \"#00BFFF\",\n      height: 20,\n      width: 80,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 42\n      }\n    })));\n  })))));\n}\n\nexport default ProfileChart;","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/jsx/layout/profile-chart.jsx"],"names":["React","useEffect","useState","TradingViewWidget","Themes","axios","Loader","ProfileChart","selectedChart","base","info","setInfo","get","then","res","data","catch","err","console","log","minHeight","DARK","map","item","idx","Object","keys","includes","Number","toLocaleString"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport TradingViewWidget from 'react-tradingview-widget';\r\nimport { Themes } from 'react-tradingview-widget';\r\nimport axios from 'axios';\r\nimport Loader from 'react-loader-spinner'\r\nfunction ProfileChart({ selectedChart}) {\r\n    const base = \"http://127.0.0.1:5000/cryptocurrency/quotes/latest?symbol=\"\r\n    const [info, setInfo] = useState({})\r\n    useEffect(() => {\r\n        setInfo({})\r\n        axios.get(base + selectedChart)\r\n        .then(res=>{\r\n            const {data} = res.data;\r\n            setInfo(data);\r\n            \r\n        }).catch(err=>{\r\n            console.log(err);\r\n            \r\n        })\r\n    }, [selectedChart])    \r\n    return (\r\n        <div className=\"card profile_chart transparent\">\r\n            <div className=\"card-body p-0\">\r\n                {/* <AreaChart /> */}\r\n                <div style={{minHeight: 400+\"px\"}}>\r\n\r\n                <TradingViewWidget \r\n                    symbol={selectedChart}\r\n                    theme={Themes.DARK}\r\n                    locale=\"fa_IR\"\r\n                    width={\"100%\"}\r\n                    height={400}\r\n                    hide_top_toolbar={true}\r\n                    allow_symbol_change={false}\r\n                    withdateranges={true}\r\n                    />\r\n                </div>\r\n                <div className=\"chart-content text-center mt-3\">\r\n                    <div className=\"row\">\r\n                    {[[\"price\", \"قیمت\", \"$\"],\r\n                     [\"volume_24h\", \"حجم 24 ساعته\", \"$\"],\r\n                     [\"market_cap\", \"حجم بازار\", \"$\"],\r\n                     [\"percent_change_1h\", \"درصد تغییر 1 ساعته\", \"%\"],\r\n                     [\"percent_change_24h\", \"درصد تغییر 24 ساعته\", \"%\"],\r\n                     [\"percent_change_7d\", \"درصد تغییر 7 روزه\", \"%\"]].map((item, idx)=>{\r\n                        return <div key={idx} className=\"col-xl-4 col-sm-6 col-6\">\r\n                                <div className=\"chart-stat\">\r\n                                    <p className=\"mb-1 fs-6\">{item[1]}</p>\r\n                                    { Object.keys(info).includes(selectedChart) ? \r\n                                        <strong dir=\"ltr\">{Number(info[selectedChart][\"quote\"][\"USD\"][item[0]]).toLocaleString()} {\" \"} {item[2]}</strong>\r\n                                        :<Loader type=\"TailSpin\" color=\"#00BFFF\" height={20} width={80} />\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        })\r\n\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileChart\r\n"]},"metadata":{},"sourceType":"module"}