{"ast":null,"code":"import { FETCH_USER_DETAIL, UPDATE_USER_DETAIL, UPDATE_USER_PROFILE, CHECK_USER_SESSION, REFRESH_USER_TOKEN, UPDATE_AUTH_ID, UPDATE_LOG_STATUS, UPDATE_LOG_INFO, UPDATE_USER_WALLET, USER_LOGOUT, USER_LOGIN } from '../actionTypes';\nimport axios from 'axios';\nimport Cookies from 'universal-cookie';\nimport { COOKIE_MAX_AGE } from '../constants';\nimport { getOtpToken } from '../../api/api';\nexport const udpate_user_detail = user => {\n  return {\n    type: UPDATE_USER_DETAIL,\n    payload: user\n  };\n};\nexport const udpate_user_profile = profile => {\n  return {\n    type: UPDATE_USER_PROFILE,\n    payload: profile\n  };\n};\nexport const udpate_user_wallet = wallet => {\n  return {\n    type: UPDATE_USER_WALLET,\n    payload: wallet\n  };\n};\nexport const update_auth_id = authID => {\n  return {\n    type: UPDATE_AUTH_ID,\n    payload: authID\n  };\n};\nexport const update_log_status = status => {\n  return {\n    type: UPDATE_LOG_STATUS,\n    payload: status\n  };\n};\nexport const update_log_info = (access, refresh) => {\n  return {\n    type: UPDATE_LOG_INFO,\n    payload: {\n      access,\n      refresh\n    }\n  };\n};\nexport const user_login = (access, refresh) => {\n  return dispatch => {\n    localStorage.setItem(\"hiexchange_token\", access);\n    localStorage.setItem(\"hiexchange_refresh\", refresh);\n    localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\n    dispatch(update_log_status(true));\n    dispatch(update_log_info(access, refresh));\n    dispatch(fetch_user_detail(access)); // dispatch(fetch_user_profile(token));\n  };\n};\nexport const fetch_user_detail = token => {\n  return dispatch => {\n    axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_detail(data.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const fetch_user_profile = token => {\n  return dispatch => {\n    axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_profile(data.data));\n    }).catch(error => {\n      console.log(error.response.status);\n    });\n  };\n};\nexport const logout = e => {\n  return {\n    type: USER_LOGOUT\n  };\n};\nexport const check_user_session = isLogged => {\n  return dispatch => {\n    const token = localStorage.getItem(\"hiexchange_token\");\n    const refresh_time = +localStorage.getItem(\"hiexchange_refresh_time\");\n    const refresh = localStorage.getItem(\"hiexchange_refresh\");\n\n    if (token && refresh_time && refresh) {\n      const now = new Date();\n\n      if (now.getTime() - refresh_time > 60 * 30 * 1000) {\n        axios.post(\"https://hi-exchange.com/api/v2/token/refresh/\", {\n          refresh: refresh\n        }).then(data => {\n          dispatch(user_login(data.data.access, refresh));\n        });\n      } else {\n        if (!isLogged) dispatch(user_login(token, refresh));\n      }\n    } else {\n      console.log(\"CAME\");\n      dispatch(logout());\n    }\n  };\n};","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/redux/actions/user.js"],"names":["FETCH_USER_DETAIL","UPDATE_USER_DETAIL","UPDATE_USER_PROFILE","CHECK_USER_SESSION","REFRESH_USER_TOKEN","UPDATE_AUTH_ID","UPDATE_LOG_STATUS","UPDATE_LOG_INFO","UPDATE_USER_WALLET","USER_LOGOUT","USER_LOGIN","axios","Cookies","COOKIE_MAX_AGE","getOtpToken","udpate_user_detail","user","type","payload","udpate_user_profile","profile","udpate_user_wallet","wallet","update_auth_id","authID","update_log_status","status","update_log_info","access","refresh","user_login","dispatch","localStorage","setItem","Date","getTime","fetch_user_detail","token","get","headers","then","data","catch","err","console","log","fetch_user_profile","post","error","response","logout","e","check_user_session","isLogged","getItem","refresh_time","now"],"mappings":"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","sourcesContent":["import {\r\n    FETCH_USER_DETAIL,\r\n    UPDATE_USER_DETAIL,\r\n    UPDATE_USER_PROFILE,\r\n    CHECK_USER_SESSION,\r\n    REFRESH_USER_TOKEN,\r\n    UPDATE_AUTH_ID,\r\n    UPDATE_LOG_STATUS,\r\n    UPDATE_LOG_INFO,\r\n    UPDATE_USER_WALLET,\r\n    USER_LOGOUT,\r\n    USER_LOGIN\r\n} from '../actionTypes'\r\nimport axios from 'axios';\r\nimport Cookies from 'universal-cookie';\r\nimport { COOKIE_MAX_AGE } from '../constants'\r\nimport {getOtpToken}  from '../../api/api'\r\nexport const udpate_user_detail = (user)=>{\r\n    return {\r\n        type: UPDATE_USER_DETAIL,\r\n        payload: user\r\n    }\r\n}\r\nexport const udpate_user_profile = (profile)=>{\r\n    return {\r\n        type: UPDATE_USER_PROFILE,\r\n        payload: profile\r\n    }\r\n}\r\n\r\nexport const udpate_user_wallet = (wallet)=>{\r\n    return {\r\n        type: UPDATE_USER_WALLET,\r\n        payload: wallet\r\n    }\r\n}\r\nexport const update_auth_id = (authID)=>{\r\n    return {\r\n        type: UPDATE_AUTH_ID,\r\n        payload: authID\r\n    }\r\n}\r\nexport const update_log_status = (status)=>{\r\n    return {\r\n        type: UPDATE_LOG_STATUS,\r\n        payload: status\r\n    }\r\n}\r\nexport const update_log_info = (access, refresh)=>{\r\n    return {\r\n        type: UPDATE_LOG_INFO,\r\n        payload: {access, refresh}\r\n    }\r\n}\r\nexport const user_login = (access, refresh)=>{\r\n    return dispatch=>{\r\n        localStorage.setItem(\"hiexchange_token\", access);\r\n        localStorage.setItem(\"hiexchange_refresh\", refresh);\r\n        localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\r\n        dispatch(update_log_status(true))\r\n        dispatch(update_log_info(access, refresh));\r\n        dispatch(fetch_user_detail(access));\r\n            // dispatch(fetch_user_profile(token));\r\n    }\r\n}\r\nexport const fetch_user_detail = (token)=>{\r\n    return (dispatch) => {\r\n        axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token,\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_detail(data.data))\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\nexport const fetch_user_profile = (token)=>{\r\n    return (dispatch) => {\r\n        axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_profile(data.data))\r\n        }).catch(error=>{\r\n            console.log(error.response.status);\r\n        })\r\n    }\r\n}\r\nexport const logout = e=>{\r\n    return {\r\n        type: USER_LOGOUT\r\n    }\r\n}\r\nexport const check_user_session = (isLogged)=>{\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"hiexchange_token\");\r\n        const refresh_time = +localStorage.getItem(\"hiexchange_refresh_time\");\r\n        const refresh = localStorage.getItem(\"hiexchange_refresh\");\r\n        if(token && refresh_time && refresh){\r\n            const now = new Date()\r\n            if (now.getTime() - refresh_time > 60*30*1000){\r\n                axios.post(\"https://hi-exchange.com/api/v2/token/refresh/\", {\r\n                    refresh: refresh\r\n                }).then(data=>{\r\n                     dispatch(user_login(data.data.access, refresh));\r\n                }) \r\n            }else{\r\n                if (!isLogged)\r\n                dispatch(user_login(token, refresh));\r\n            }\r\n        }else{\r\n            console.log(\"CAME\")\r\n            dispatch(logout())\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}