{"ast":null,"code":"import { UPDATE_USER_DETAIL, UPDATE_USER_PROFILE, UPDATE_AUTH_ID, UPDATE_LOG_STATUS, UPDATE_LOG_INFO, UPDATE_USER_WALLET, USER_LOGOUT } from '../actionTypes';\nimport { sessionService } from 'redux-react-session';\nimport axios from 'axios';\nimport { COOKIE_MAX_AGE } from '../constants';\nexport const userLogout = _history => {\n  return () => {\n    sessionService.deleteSession();\n    sessionService.deleteUser();\n\n    _history.push(\"/opt-1\");\n  };\n};\nexport const userLogin = (credentias, _histroy, setIsSubmitting) => {\n  return dispatch => {\n    axios.post(\"https://hi-exchange.com/api/v2/token/verify/\", credentias).then(response => {\n      const {\n        data\n      } = response;\n      const {\n        access: token,\n        refresh\n      } = data;\n      sessionService.saveSession({\n        token,\n        refresh\n      }).then(e => {\n        axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\n          headers: {\n            \"Authorization\": \"Bearer \" + token\n          }\n        }).then(data => {\n          sessionService.saveUser(data.data).then(e => {\n            _histroy.push({\n              pathname: \"/\"\n            });\n          });\n        }).catch(err => {\n          console.log(err);\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {// toast.error(\"کد وارد شده صحیح نمی باشد.\", toastOpt)\n    }).finally(e => {\n      setIsSubmitting(false);\n    });\n  };\n};\nexport const udpate_user_detail = user => {\n  return {\n    type: UPDATE_USER_DETAIL,\n    payload: user\n  };\n};\nexport const udpate_user_profile = profile => {\n  return {\n    type: UPDATE_USER_PROFILE,\n    payload: profile\n  };\n};\nexport const udpate_user_wallet = wallet => {\n  return {\n    type: UPDATE_USER_WALLET,\n    payload: wallet\n  };\n};\nexport const update_auth_id = authID => {\n  return {\n    type: UPDATE_AUTH_ID,\n    payload: authID\n  };\n};\nexport const update_log_status = status => {\n  return {\n    type: UPDATE_LOG_STATUS,\n    payload: status\n  };\n};\nexport const update_log_info = (access, refresh) => {\n  return {\n    type: UPDATE_LOG_INFO,\n    payload: {\n      access,\n      refresh\n    }\n  };\n};\nexport const user_login = (access, refresh) => {\n  return dispatch => {\n    localStorage.setItem(\"hiexchange_token\", access);\n    localStorage.setItem(\"hiexchange_refresh\", refresh);\n    localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\n    dispatch(update_log_status(true));\n    dispatch(update_log_info(access, refresh));\n    dispatch(fetch_user_detail(access)); // dispatch(fetch_user_profile(token));\n  };\n};\nexport const fetch_user_detail = token => {\n  return dispatch => {\n    axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_detail(data.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const fetch_user_profile = token => {\n  return dispatch => {\n    axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_profile(data.data));\n    }).catch(error => {\n      console.log(error.response.status);\n    });\n  };\n};\nexport const logout = e => {\n  return {\n    type: USER_LOGOUT\n  };\n};\nexport const check_user_session = isLogged => {\n  return dispatch => {\n    const token = localStorage.getItem(\"hiexchange_token\");\n    const refresh_time = +localStorage.getItem(\"hiexchange_refresh_time\");\n    const refresh = localStorage.getItem(\"hiexchange_refresh\");\n\n    if (token && refresh_time && refresh) {\n      const now = new Date();\n\n      if (now.getTime() - refresh_time > 60 * 30 * 1000) {\n        axios.post(\"https://hi-exchange.com/api/v2/token/refresh/\", {\n          refresh: refresh\n        }).then(data => {\n          dispatch(user_login(data.data.access, refresh));\n        });\n      } else {\n        if (!isLogged) dispatch(user_login(token, refresh));\n      }\n    } else {\n      console.log(\"CAME\");\n      dispatch(logout());\n    }\n  };\n};","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/redux/actions/user.js"],"names":["UPDATE_USER_DETAIL","UPDATE_USER_PROFILE","UPDATE_AUTH_ID","UPDATE_LOG_STATUS","UPDATE_LOG_INFO","UPDATE_USER_WALLET","USER_LOGOUT","sessionService","axios","COOKIE_MAX_AGE","userLogout","_history","deleteSession","deleteUser","push","userLogin","credentias","_histroy","setIsSubmitting","dispatch","post","then","response","data","access","token","refresh","saveSession","e","get","headers","saveUser","pathname","catch","err","console","log","finally","udpate_user_detail","user","type","payload","udpate_user_profile","profile","udpate_user_wallet","wallet","update_auth_id","authID","update_log_status","status","update_log_info","user_login","localStorage","setItem","Date","getTime","fetch_user_detail","fetch_user_profile","error","logout","check_user_session","isLogged","getItem","refresh_time","now"],"mappings":"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","sourcesContent":["import {\r\n    UPDATE_USER_DETAIL,\r\n    UPDATE_USER_PROFILE,\r\n    UPDATE_AUTH_ID,\r\n    UPDATE_LOG_STATUS,\r\n    UPDATE_LOG_INFO,\r\n    UPDATE_USER_WALLET,\r\n    USER_LOGOUT,\r\n} from '../actionTypes'\r\nimport { sessionService } from 'redux-react-session'\r\nimport axios from 'axios';\r\nimport { COOKIE_MAX_AGE } from '../constants'\r\nexport const userLogout = (_history)=>{\r\n    return ()=>{\r\n        sessionService.deleteSession();\r\n        sessionService.deleteUser();\r\n        _history.push(\"/opt-1\")\r\n    }\r\n}\r\nexport const userLogin = (credentias, _histroy ,setIsSubmitting)=>{\r\n    return dispatch=>{\r\n\r\n        axios.post(\"https://hi-exchange.com/api/v2/token/verify/\", credentias)\r\n            .then(response=>{\r\n                const {data} = response\r\n                const {access:token, refresh} = data;\r\n                sessionService.saveSession({token, refresh}).then(e=>{\r\n                    axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\r\n                        headers: {\r\n                            \"Authorization\": \"Bearer \"+token,\r\n                        }\r\n                    }).then(data=>{\r\n                        sessionService.saveUser(data.data).then(e=>{\r\n                            _histroy.push({pathname: \"/\"});\r\n                        })\r\n                    }).catch(err=>{\r\n                        console.log(err);\r\n                    })\r\n                }).catch(err=>{\r\n                    console.log(err);\r\n                })\r\n            }).catch(err=>{\r\n                // toast.error(\"کد وارد شده صحیح نمی باشد.\", toastOpt)\r\n            }).finally(e=>{\r\n                \r\n                setIsSubmitting(false);\r\n            })\r\n    }\r\n}\r\nexport const udpate_user_detail = (user)=>{\r\n    return {\r\n        type: UPDATE_USER_DETAIL,\r\n        payload: user\r\n    }\r\n}\r\nexport const udpate_user_profile = (profile)=>{\r\n    return {\r\n        type: UPDATE_USER_PROFILE,\r\n        payload: profile\r\n    }\r\n}\r\n\r\nexport const udpate_user_wallet = (wallet)=>{\r\n    return {\r\n        type: UPDATE_USER_WALLET,\r\n        payload: wallet\r\n    }\r\n}\r\nexport const update_auth_id = (authID)=>{\r\n    return {\r\n        type: UPDATE_AUTH_ID,\r\n        payload: authID\r\n    }\r\n}\r\nexport const update_log_status = (status)=>{\r\n    return {\r\n        type: UPDATE_LOG_STATUS,\r\n        payload: status\r\n    }\r\n}\r\nexport const update_log_info = (access, refresh)=>{\r\n    return {\r\n        type: UPDATE_LOG_INFO,\r\n        payload: {access, refresh}\r\n    }\r\n}\r\nexport const user_login = (access, refresh)=>{\r\n    return dispatch=>{\r\n        localStorage.setItem(\"hiexchange_token\", access);\r\n        localStorage.setItem(\"hiexchange_refresh\", refresh);\r\n        localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\r\n        dispatch(update_log_status(true))\r\n        dispatch(update_log_info(access, refresh));\r\n        dispatch(fetch_user_detail(access));\r\n            // dispatch(fetch_user_profile(token));\r\n    }\r\n}\r\nexport const fetch_user_detail = (token)=>{\r\n    return (dispatch) => {\r\n        axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token,\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_detail(data.data))\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\nexport const fetch_user_profile = (token)=>{\r\n    return (dispatch) => {\r\n        axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_profile(data.data))\r\n        }).catch(error=>{\r\n            console.log(error.response.status);\r\n        })\r\n    }\r\n}\r\nexport const logout = e=>{\r\n    return {\r\n        type: USER_LOGOUT\r\n    }\r\n}\r\nexport const check_user_session = (isLogged)=>{\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"hiexchange_token\");\r\n        const refresh_time = +localStorage.getItem(\"hiexchange_refresh_time\");\r\n        const refresh = localStorage.getItem(\"hiexchange_refresh\");\r\n        if(token && refresh_time && refresh){\r\n            const now = new Date()\r\n            if (now.getTime() - refresh_time > 60*30*1000){\r\n                axios.post(\"https://hi-exchange.com/api/v2/token/refresh/\", {\r\n                    refresh: refresh\r\n                }).then(data=>{\r\n                     dispatch(user_login(data.data.access, refresh));\r\n                }) \r\n            }else{\r\n                if (!isLogged)\r\n                dispatch(user_login(token, refresh));\r\n            }\r\n        }else{\r\n            console.log(\"CAME\")\r\n            dispatch(logout())\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}