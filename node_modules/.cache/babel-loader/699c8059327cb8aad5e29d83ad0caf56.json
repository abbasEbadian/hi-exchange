{"ast":null,"code":"var _jsxFileName = \"H:\\\\Projects\\\\package\\\\cheerio\\\\src\\\\jsx\\\\charts\\\\radial.jsx\";\nimport React, { Component, useState, useContext, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { UserContext } from \"../UserContext\";\n\nconst RadialChart = e => {\n  const [state, setState] = useState({});\n  const {\n    user: currentUser\n  } = useContext(UserContext);\n  useEffect(e => {\n    console.log(\"X\", currentUser);\n    let series = currentUser && currentUser.currencies && Object.values(currentUser.currencies) || [];\n    setState({\n      series: series,\n      options: {\n        chart: {\n          height: 300,\n          type: 'radialBar'\n        },\n        tooltip: {\n          enabled: true,\n          enabledOnSeries: undefined,\n          shared: true,\n          followCursor: false,\n          intersect: false,\n          inverseOrder: false,\n          fillSeriesColor: false,\n          theme: \"light\",\n          style: {\n            fontSize: '14px',\n            fontFamily: undefined,\n            justifyContent: 'space-between'\n          },\n          onDatasetHover: {\n            highlightDataSeries: false\n          },\n          x: {\n            show: true,\n            format: 'dd MMM',\n            formatter: undefined\n          },\n          y: {\n            formatter: undefined,\n            title: {\n              formatter: seriesName => seriesName\n            }\n          },\n          z: {\n            formatter: undefined,\n            title: 'Size: '\n          },\n          marker: {\n            show: false\n          },\n          items: {\n            display: \"flex\"\n          },\n          fixed: {\n            enabled: false,\n            position: 'topRight',\n            offsetX: 0,\n            offsetY: 0\n          }\n        },\n        plotOptions: {\n          radialBar: {\n            offsetY: 0,\n            startAngle: 0,\n            endAngle: 360,\n            hollow: {\n              margin: 5,\n              size: '30%',\n              background: 'transparent',\n              image: undefined\n            },\n            dataLabels: {\n              name: {\n                show: false\n              },\n              value: {\n                show: false\n              }\n            }\n          }\n        },\n        colors: ['rgba(137, 22, 255,1)', 'rgba(137, 22, 255,0.7)', 'rgba(137, 22, 255,0.3)', 'rgba(137, 22, 255,0.1)'],\n        labels: ['Bitcoin', 'Litecoin', 'Ripple', 'Dash'],\n        legend: {\n          show: false,\n          floating: true,\n          fontSize: '16px',\n          position: 'left',\n          offsetX: 160,\n          offsetY: 15,\n          labels: {\n            useSeriesColors: true\n          },\n          markers: {\n            size: 0\n          },\n          formatter: function (seriesName, opts) {\n            return seriesName + \":  \" + opts.w.globals.series[opts.seriesIndex];\n          },\n          itemMargin: {\n            vertical: 3\n          }\n        },\n        responsive: [{\n          breakpoint: 480,\n          options: {\n            legend: {\n              show: false\n            }\n          }\n        }]\n      }\n    });\n  }, []);\n  console.log(state);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.options ? /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: state.options,\n    series: state.series,\n    type: \"radialBar\",\n    height: 360,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default RadialChart;","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/jsx/charts/radial.jsx"],"names":["React","Component","useState","useContext","useEffect","ReactApexChart","UserContext","RadialChart","e","state","setState","user","currentUser","console","log","series","currencies","Object","values","options","chart","height","type","tooltip","enabled","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","theme","style","fontSize","fontFamily","justifyContent","onDatasetHover","highlightDataSeries","x","show","format","formatter","y","title","seriesName","z","marker","items","display","fixed","position","offsetX","offsetY","plotOptions","radialBar","startAngle","endAngle","hollow","margin","size","background","image","dataLabels","name","value","colors","labels","legend","floating","useSeriesColors","markers","opts","w","globals","seriesIndex","itemMargin","vertical","responsive","breakpoint"],"mappings":"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","sourcesContent":["\r\nimport React, { Component, useState, useContext, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\n\r\n\r\nconst RadialChart = e =>{\r\n    \r\n    const [state, setState] = useState({})\r\n    const { user: currentUser } = useContext(UserContext);\r\n    useEffect(e=>{\r\n        console.log(\"X\", currentUser);\r\n        let series = currentUser && currentUser.currencies &&  Object.values(currentUser.currencies) || [];\r\n        setState({\r\n            series: series,\r\n            options: {\r\n                chart: {\r\n                    height: 300,\r\n                    type: 'radialBar',\r\n                },\r\n                tooltip: {\r\n                    enabled: true,\r\n                    enabledOnSeries: undefined,\r\n                    shared: true,\r\n                    followCursor: false,\r\n                    intersect: false,\r\n                    inverseOrder: false,\r\n                    \r\n                    fillSeriesColor: false,\r\n                    theme: \"light\",\r\n                    style: {\r\n                        fontSize: '14px',\r\n                        fontFamily: undefined,\r\n                        justifyContent: 'space-between'\r\n                    },\r\n                    onDatasetHover: {\r\n                        highlightDataSeries: false,\r\n                    },\r\n                    x: {\r\n                        show: true,\r\n                        format: 'dd MMM',\r\n                        formatter: undefined,\r\n                    },\r\n                    y: {\r\n                        formatter: undefined,\r\n                        title: {\r\n                            formatter: (seriesName) => seriesName,\r\n                        },\r\n                    },\r\n                    z: {\r\n                        formatter: undefined,\r\n                        title: 'Size: '\r\n                    },\r\n                    marker: {\r\n                        show: false,\r\n                    },\r\n                    items: {\r\n                        display: \"flex\",\r\n                    },\r\n                    fixed: {\r\n                        enabled: false,\r\n                        position: 'topRight',\r\n                        offsetX: 0,\r\n                        offsetY: 0,\r\n                    },\r\n                    \r\n                },\r\n                plotOptions: {\r\n                    radialBar: {\r\n                        offsetY: 0,\r\n                        startAngle: 0,\r\n                        endAngle: 360,\r\n                        hollow: {\r\n                            margin: 5,\r\n                            size: '30%',\r\n                            background: 'transparent',\r\n                            image: undefined,\r\n                        },\r\n                        dataLabels: {\r\n                            name: {\r\n                                show: false,\r\n                            },\r\n                            value: {\r\n                                show: false,\r\n                            }\r\n                        }\r\n                    }\r\n                },\r\n                colors: [\r\n                    'rgba(137, 22, 255,1)',\r\n                    'rgba(137, 22, 255,0.7)',\r\n                    'rgba(137, 22, 255,0.3)',\r\n                    'rgba(137, 22, 255,0.1)'\r\n                ],\r\n                labels: ['Bitcoin', 'Litecoin', 'Ripple', 'Dash'],\r\n                legend: {\r\n                    show: false,\r\n                    floating: true,\r\n                    fontSize: '16px',\r\n                    position: 'left',\r\n                    offsetX: 160,\r\n                    offsetY: 15,\r\n                    labels: {\r\n                        useSeriesColors: true,\r\n                    },\r\n                    markers: {\r\n                        size: 0\r\n                    },\r\n                    formatter: function (seriesName, opts) {\r\n                        return seriesName + \":  \" + opts.w.globals.series[opts.seriesIndex]\r\n                    },\r\n                    itemMargin: {\r\n                        vertical: 3\r\n                    }\r\n                },\r\n                responsive: [{\r\n                    breakpoint: 480,\r\n                    options: {\r\n                        legend: {\r\n                            show: false\r\n                        }\r\n                    }\r\n                }]\r\n            },\r\n    \r\n    \r\n        });\r\n    }, []);\r\n   \r\n    \r\n\r\n\r\n    console.log(state);\r\n    \r\n\r\n    return (\r\n        <>\r\n        {\r\n            state.options ?\r\n            <ReactApexChart options={state.options} series={state.series} type=\"radialBar\" height={360} />\r\n            :\r\n            <span></span>\r\n        }\r\n        </>\r\n\r\n\r\n\r\n    );\r\n    \r\n}\r\n\r\nexport default RadialChart;"]},"metadata":{},"sourceType":"module"}