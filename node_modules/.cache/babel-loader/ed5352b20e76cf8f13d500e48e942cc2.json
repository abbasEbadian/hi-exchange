{"ast":null,"code":"import { UPDATE_USER_DETAIL, UPDATE_USER_PROFILE, UPDATE_AUTH_ID, UPDATE_LOG_STATUS, UPDATE_LOG_INFO, UPDATE_USER_WALLET, USER_LOGOUT } from '../actionTypes';\nimport { sessionService } from 'redux-react-session';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { toggle_loader_on, toggle_loader_off } from '../actions';\nimport { axios_interceptor } from '../../jsx';\nconst toastOpt = {\n  position: \"bottom-left\",\n  hideProgressBar: false,\n  closeOnClick: true,\n  draggable: true,\n  autoClose: 5000\n};\nconst BASE = \"https://hi-exchange.com\";\nexport const userLogout = _history => {\n  return dispatch => {\n    dispatch(toggle_loader_on());\n    sessionService.deleteUser().then(e => {\n      sessionService.deleteSession().then(e => {\n        _history.push(\"/otp-1\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err);\n    }).finally(e => {\n      setTimeout(() => {\n        dispatch(toggle_loader_off());\n      }, 2000);\n    });\n  };\n};\nexport const userUpdateDetail = (token, _history = undefined) => {\n  return dispatch => {\n    axios.interceptors.response.use(axios_interceptor);\n    dispatch(toggle_loader_on());\n    axios.get(BASE + \"/api/v2/account/details/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      sessionService.saveUser({ ...data.data\n      }).then(e => {\n        if (_history) _history.push({\n          pathname: \"/\"\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    }).finally(e => {\n      setTimeout(() => {\n        dispatch(toggle_loader_off());\n      }, 800);\n    });\n  };\n};\nexport const userLogin = (credentias, _history, setIsSubmitting) => {\n  return dispatch => {\n    axios.post(BASE + \"/api/v2/token/verify/\", credentias).then(response => {\n      dispatch(toggle_loader_on());\n      const {\n        data\n      } = response;\n      const {\n        access: token,\n        refresh\n      } = data;\n      sessionService.saveSession({\n        token,\n        refresh,\n        refresh_time: new Date().getTime()\n      }).then(e => {\n        dispatch(userUpdateDetail(token, _history));\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      toast.error(\"کد وارد شده صحیح نمی باشد.\", toastOpt);\n    }).finally(e => {\n      setIsSubmitting(false);\n      setTimeout(() => {\n        dispatch(toggle_loader_off());\n      }, 800);\n    });\n  };\n};\nexport const userUpdateName = name => {\n  return dispatch => {\n    sessionService.loadSession().then(session => {\n      axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\n        name\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + session.token\n        }\n      }).then(data => {\n        toast.success(data.data.message, toastOpt);\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"با خطا مواجه شد.\");\n      });\n    });\n  };\n};\nexport const userUpdateImage = (image, toast, toastOpt) => {\n  return dispatch => {\n    sessionService.loadSession().then(session => {\n      axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\n        image\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + session.token\n        }\n      }).then(data => {\n        toast.success(data.data.message, toastOpt);\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"با خطا مواجه شد.\");\n      });\n    });\n  };\n};\nexport const userUpdatePersonal = info => {\n  return dispatch => {\n    sessionService.loadSession().then(session => {\n      axios.post(BASE + \"/api/v2/account/manage/\", {\n        action: \"profile\",\n        ...info\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + session.token\n        }\n      }).then(response => {\n        const {\n          data\n        } = response;\n\n        if (data.error === 1) {\n          toast.warning(data.message, toastOpt);\n        } else {\n          toast.success(data.message, toastOpt);\n        }\n      }).catch(error => {\n        toast.error(\"با خطا مواجه شد.\", toastOpt);\n        console.log(error);\n      });\n    });\n  };\n};\nexport const udpate_user_detail = user => {\n  return {\n    type: UPDATE_USER_DETAIL,\n    payload: user\n  };\n};\nexport const udpate_user_profile = profile => {\n  return {\n    type: UPDATE_USER_PROFILE,\n    payload: profile\n  };\n};\nexport const udpate_user_wallet = wallet => {\n  return {\n    type: UPDATE_USER_WALLET,\n    payload: wallet\n  };\n};\nexport const update_auth_id = authID => {\n  return {\n    type: UPDATE_AUTH_ID,\n    payload: authID\n  };\n};\nexport const update_log_status = status => {\n  return {\n    type: UPDATE_LOG_STATUS,\n    payload: status\n  };\n};\nexport const update_log_info = (access, refresh) => {\n  return {\n    type: UPDATE_LOG_INFO,\n    payload: {\n      access,\n      refresh\n    }\n  };\n};\nexport const user_login = (access, refresh) => {\n  return dispatch => {\n    localStorage.setItem(\"hiexchange_token\", access);\n    localStorage.setItem(\"hiexchange_refresh\", refresh);\n    localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\n    dispatch(update_log_status(true));\n    dispatch(update_log_info(access, refresh));\n    dispatch(fetch_user_detail(access)); // dispatch(fetch_user_profile(token));\n  };\n};\nexport const fetch_user_detail = token => {\n  return dispatch => {\n    axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_detail(data.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const fetch_user_profile = token => {\n  return dispatch => {\n    axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_profile(data.data));\n    }).catch(error => {\n      console.log(error.response.status);\n    });\n  };\n};\nexport const logout = e => {\n  return {\n    type: USER_LOGOUT\n  };\n};","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/redux/actions/user.js"],"names":["UPDATE_USER_DETAIL","UPDATE_USER_PROFILE","UPDATE_AUTH_ID","UPDATE_LOG_STATUS","UPDATE_LOG_INFO","UPDATE_USER_WALLET","USER_LOGOUT","sessionService","axios","toast","toggle_loader_on","toggle_loader_off","axios_interceptor","toastOpt","position","hideProgressBar","closeOnClick","draggable","autoClose","BASE","userLogout","_history","dispatch","deleteUser","then","e","deleteSession","push","catch","err","console","log","finally","setTimeout","userUpdateDetail","token","undefined","interceptors","response","use","get","headers","data","saveUser","pathname","userLogin","credentias","setIsSubmitting","post","access","refresh","saveSession","refresh_time","Date","getTime","error","userUpdateName","name","loadSession","session","Authorization","success","message","userUpdateImage","image","userUpdatePersonal","info","action","warning","udpate_user_detail","user","type","payload","udpate_user_profile","profile","udpate_user_wallet","wallet","update_auth_id","authID","update_log_status","status","update_log_info","user_login","localStorage","setItem","fetch_user_detail","fetch_user_profile","logout"],"mappings":"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","sourcesContent":["import {\r\n    UPDATE_USER_DETAIL,\r\n    UPDATE_USER_PROFILE,\r\n    UPDATE_AUTH_ID,\r\n    UPDATE_LOG_STATUS,\r\n    UPDATE_LOG_INFO,\r\n    UPDATE_USER_WALLET,\r\n    USER_LOGOUT,\r\n} from '../actionTypes'\r\nimport { sessionService } from 'redux-react-session'\r\nimport axios from 'axios';\r\nimport {toast } from 'react-toastify'\r\nimport { toggle_loader_on, toggle_loader_off } from '../actions'\r\nimport { axios_interceptor } from '../../jsx';\r\n\r\nconst toastOpt = {\r\n    position: \"bottom-left\",\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    draggable: true,\r\n    autoClose: 5000,\r\n}\r\n\r\n\r\nconst BASE = \"https://hi-exchange.com\"\r\n\r\n\r\nexport const userLogout = (_history)=>{\r\n    return (dispatch)=>{\r\n        dispatch(toggle_loader_on())\r\n        sessionService.deleteUser().then(e=>{\r\n            sessionService.deleteSession().then(e=>{\r\n                _history.push(\"/otp-1\")\r\n    \r\n            }).catch(err=>{\r\n                console.log(err);\r\n                \r\n            });\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        }).finally(e=>{\r\n            setTimeout(() => {\r\n                dispatch(toggle_loader_off());\r\n            }, 2000);\r\n        });\r\n    }\r\n}\r\nexport const userUpdateDetail = (token, _history=undefined)=>{\r\n    return dispatch=>{\r\n        axios.interceptors.response.use(axios_interceptor);\r\n        dispatch(toggle_loader_on())\r\n        axios.get(BASE + \"/api/v2/account/details/\", {\r\n            headers: {\r\n            \"Authorization\": \"Bearer \"+token,\r\n        }\r\n        }).then(data=>{\r\n            sessionService.saveUser({ ...data.data }).then(e=>{\r\n                if(_history)\r\n                    _history.push({pathname: \"/\"});\r\n            })\r\n        }).catch(err=>{\r\n                console.log(err);\r\n        }).finally(e=>{\r\n            setTimeout(() => {\r\n                dispatch(toggle_loader_off())\r\n            }, 800);\r\n        })\r\n    }\r\n}\r\nexport const userLogin = (credentias, _history ,setIsSubmitting)=>{\r\n    return dispatch=>{\r\n        axios.post(BASE+\"/api/v2/token/verify/\", credentias)\r\n            .then(response=>{\r\n                dispatch(toggle_loader_on())\r\n                const {data} = response\r\n                const {access:token, refresh} = data;\r\n                sessionService\r\n                .saveSession({ token, refresh, refresh_time: new Date().getTime() }).then(e=>{\r\n                    dispatch(userUpdateDetail(token, _history))\r\n                }).catch(err=>{\r\n                    console.log(err);\r\n                })\r\n            }).catch(err=>{\r\n                toast.error(\"کد وارد شده صحیح نمی باشد.\", toastOpt)\r\n            }).finally(e=>{\r\n                setIsSubmitting(false);\r\n                setTimeout(() => {\r\n                    dispatch(toggle_loader_off())\r\n                }, 800);\r\n            })\r\n    }\r\n}\r\nexport const userUpdateName =  (name)=>{\r\n    return dispatch=>{\r\n        sessionService.loadSession().then(session=>{\r\n            axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\r\n                name\r\n            },\r\n            {headers:{\r\n                Authorization: \"Bearer \" + session.token\r\n            }}\r\n            ).then(data=>{\r\n                toast.success(data.data.message, toastOpt);  \r\n            }).catch(err=>{\r\n                console.log(err);\r\n                toast.error(\"با خطا مواجه شد.\")\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const userUpdateImage =  (image, toast, toastOpt)=>{\r\n    return dispatch=>{\r\n        sessionService.loadSession().then(session=>{\r\n            axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\r\n                image\r\n            },\r\n            {headers:{\r\n                Authorization: \"Bearer \" + session.token\r\n            }}\r\n            ).then(data=>{\r\n                toast.success(data.data.message, toastOpt);  \r\n            }).catch(err=>{\r\n                console.log(err);\r\n                toast.error(\"با خطا مواجه شد.\")\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const userUpdatePersonal = (info)=>{\r\n    return dispatch=>{\r\n        \r\n        sessionService.loadSession().then(session=>{\r\n            axios.post(BASE+\"/api/v2/account/manage/\", {\r\n                action: \"profile\",\r\n                ...info\r\n            },{\r\n                headers:{\r\n                    Authorization: \"Bearer \" + session.token\r\n                }\r\n            }).then(response=>{\r\n                const {data} = response;\r\n                if (data.error === 1){\r\n                    toast.warning(data.message, toastOpt);\r\n                }else{\r\n                    toast.success(data.message, toastOpt)\r\n                }\r\n            }).catch(error=>{\r\n                toast.error(\"با خطا مواجه شد.\", toastOpt)\r\n                console.log(error)\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const udpate_user_detail = (user)=>{\r\n    return {\r\n        type: UPDATE_USER_DETAIL,\r\n        payload: user\r\n    }\r\n}\r\nexport const udpate_user_profile = (profile)=>{\r\n    return {\r\n        type: UPDATE_USER_PROFILE,\r\n        payload: profile\r\n    }\r\n}\r\n\r\nexport const udpate_user_wallet = (wallet)=>{\r\n    return {\r\n        type: UPDATE_USER_WALLET,\r\n        payload: wallet\r\n    }\r\n}\r\nexport const update_auth_id = (authID)=>{\r\n    return {\r\n        type: UPDATE_AUTH_ID,\r\n        payload: authID\r\n    }\r\n}\r\nexport const update_log_status = (status)=>{\r\n    return {\r\n        type: UPDATE_LOG_STATUS,\r\n        payload: status\r\n    }\r\n}\r\nexport const update_log_info = (access, refresh)=>{\r\n    return {\r\n        type: UPDATE_LOG_INFO,\r\n        payload: {access, refresh}\r\n    }\r\n}\r\nexport const user_login = (access, refresh)=>{\r\n    return dispatch=>{\r\n        localStorage.setItem(\"hiexchange_token\", access);\r\n        localStorage.setItem(\"hiexchange_refresh\", refresh);\r\n        localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\r\n        dispatch(update_log_status(true))\r\n        dispatch(update_log_info(access, refresh));\r\n        dispatch(fetch_user_detail(access));\r\n            // dispatch(fetch_user_profile(token));\r\n    }\r\n}\r\nexport const fetch_user_detail = (token)=>{\r\n    return (dispatch) => {\r\n        axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token,\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_detail(data.data))\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\nexport const fetch_user_profile = (token)=>{\r\n    return (dispatch) => {\r\n        axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_profile(data.data))\r\n        }).catch(error=>{\r\n            console.log(error.response.status);\r\n        })\r\n    }\r\n}\r\nexport const logout = e=>{\r\n    return {\r\n        type: USER_LOGOUT\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}