{"ast":null,"code":"import axios from \"axios\";\nimport { sessionService } from 'redux-react-session';\nimport { Constants } from '../../Constants';\nexport const UPDATE_WALLET_LIST = \"UPDATE_WALLET_LIST\";\nexport const UPDATE_FETCHING_STATE = \"UPDATE_FETCHING_STATE\";\nexport const CHECKING_TRANSACTION = \"CHECKING_TRANSACTION\";\nexport const get_wallet_list = () => {\n  return dispatch => {\n    dispatch(update_fetching_state(true));\n    return new Promise((resolve, reject) => {\n      sessionService.loadSession().then(session => {\n        axios.get(\"https://hi-exchange.com/api/v2/wallet/list/\").then(res => {\n          const d = [{\n            balance: 1,\n            service: {\n              id: 6,\n              name: \"بیت کوین\",\n              small_name: \"BTC\",\n              small_name_slug: \"BTC\",\n              show_price_irt: 1000\n            }\n          }, {\n            balance: 40,\n            service: {\n              id: 20,\n              name: \"لایت کوین\",\n              small_name: \"LTC\",\n              small_name_slug: \"LTC\",\n              show_price_irt: 100\n            }\n          }, {\n            balance: 60,\n            service: {\n              id: 15,\n              name: \"اتریوم\",\n              small_name: \"ETH\",\n              small_name_slug: \"ETH\",\n              show_price_irt: 10\n            }\n          }, ...res.data];\n          d.sort((a, b) => {\n            return a.service.name === \"IRT\" && -1 || a.service.name === \"USDT\" && -2 || a.balance - b.balance;\n          });\n          dispatch(update_wallet_list(d));\n          dispatch(update_fetching_state(false));\n          return resolve(d);\n        }).catch(err => {\n          console.log(err);\n          dispatch(update_fetching_state(false));\n          return reject();\n        });\n      }).catch(err => {\n        console.log(err);\n        return reject();\n      });\n    });\n  };\n};\nexport const update_wallet_list = wallet_object => {\n  return {\n    type: UPDATE_WALLET_LIST,\n    payload: wallet_object\n  };\n};\nexport const update_fetching_state = is_fetching => {\n  return {\n    type: UPDATE_FETCHING_STATE,\n    payload: is_fetching\n  };\n};\nexport const check_transaction = ({\n  depositTxID,\n  amount = 0\n}, setWithdrawModalOpen, toast) => {\n  return dispatch => {\n    dispatch(checking_transaction(true));\n    axios.post(Constants.BASE_URL + \"/api/v2/wallet/deposit/\", {\n      depositTxID,\n      wallet: \"559031ef-dd91-4677-a068-84818ebf5974\"\n    }).then(response => {\n      const {\n        data\n      } = response;\n      if (data.error == 1) toast.error(data.message);else {\n        toast.success(\"تراکنش شما ثبت شد.بعد از تایید کارشناسان ما اعمال خواهد شد.\");\n        setWithdrawModalOpen(false);\n      }\n    }).catch(err => {\n      console.log(err);\n    }).finally(fn => {\n      dispatch(checking_transaction(false));\n    });\n  };\n};\nexport const checking_transaction = is_checking => {\n  return {\n    type: CHECKING_TRANSACTION,\n    payload: is_checking\n  };\n};","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/redux/actions/wallet.js"],"names":["axios","sessionService","Constants","UPDATE_WALLET_LIST","UPDATE_FETCHING_STATE","CHECKING_TRANSACTION","get_wallet_list","dispatch","update_fetching_state","Promise","resolve","reject","loadSession","then","session","get","res","d","balance","service","id","name","small_name","small_name_slug","show_price_irt","data","sort","a","b","update_wallet_list","catch","err","console","log","wallet_object","type","payload","is_fetching","check_transaction","depositTxID","amount","setWithdrawModalOpen","toast","checking_transaction","post","BASE_URL","wallet","response","error","message","success","finally","fn","is_checking"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport { sessionService } from 'redux-react-session' \r\nimport { Constants } from '../../Constants'\r\n\r\n\r\nexport const UPDATE_WALLET_LIST = \"UPDATE_WALLET_LIST\"\r\nexport const UPDATE_FETCHING_STATE = \"UPDATE_FETCHING_STATE\"\r\nexport const CHECKING_TRANSACTION = \"CHECKING_TRANSACTION\"\r\n\r\n\r\n\r\nexport const get_wallet_list = ()=>{\r\n    return dispatch=>{\r\n        dispatch(update_fetching_state(true))\r\n        return new Promise((resolve, reject)=>{\r\n            sessionService.loadSession().then(session=>{\r\n                axios.get(\"https://hi-exchange.com/api/v2/wallet/list/\").then(res=>{\r\n                    \r\n                    const d = [\r\n                       \r\n                        {\r\n                            balance: 1,\r\n                            service: {\r\n                                id: 6,\r\n                                name: \"بیت کوین\", \r\n                                small_name: \"BTC\",\r\n                                small_name_slug: \"BTC\",\r\n                                show_price_irt: 1000\r\n                            }\r\n                        },\r\n                        {\r\n                            balance: 40,\r\n                            service: {\r\n                                id:20,\r\n                                name: \"لایت کوین\", \r\n                                small_name: \"LTC\",\r\n                                small_name_slug: \"LTC\",\r\n                                show_price_irt: 100\r\n                            }\r\n                        },\r\n                        {\r\n                            balance: 60,\r\n                            service: {\r\n                                id:15,\r\n                                name: \"اتریوم\", \r\n                                small_name: \"ETH\",\r\n                                small_name_slug: \"ETH\",\r\n                                show_price_irt: 10\r\n                            }\r\n                        }, ...res.data,\r\n                    ]\r\n                     d.sort((a,b)=>{\r\n                        return (a.service.name === \"IRT\" && -1 )  || (a.service.name === \"USDT\" && -2) || a.balance - b.balance\r\n                    })\r\n                    dispatch(update_wallet_list(d))\r\n                    dispatch(update_fetching_state(false))\r\n                    return resolve(d)\r\n                    \r\n                }).catch(err=>{\r\n                    console.log(err);\r\n                    dispatch(update_fetching_state(false))\r\n                    return reject()\r\n                })\r\n            }).catch(err=>{\r\n                console.log(err);\r\n                return reject()\r\n            })\r\n        })\r\n       \r\n       \r\n    }\r\n}\r\nexport const update_wallet_list = (wallet_object)=>{\r\n    return {\r\n        type: UPDATE_WALLET_LIST,\r\n        payload: wallet_object\r\n    }\r\n}\r\nexport const update_fetching_state = (is_fetching)=>{\r\n    return {\r\n        type: UPDATE_FETCHING_STATE,\r\n        payload: is_fetching\r\n    }\r\n}\r\n\r\n\r\nexport const check_transaction = ({depositTxID, amount=0}, setWithdrawModalOpen, toast)=>{\r\n    return dispatch=>{\r\n        dispatch(checking_transaction(true))\r\n        axios.post(Constants.BASE_URL + \"/api/v2/wallet/deposit/\", {\r\n            depositTxID,\r\n            wallet: \"559031ef-dd91-4677-a068-84818ebf5974\"\r\n        }).then(response=>{\r\n            const {data} = response\r\n            if (data.error == 1)\r\n                toast.error(data.message)\r\n            else{\r\n                toast.success(\"تراکنش شما ثبت شد.بعد از تایید کارشناسان ما اعمال خواهد شد.\")\r\n                setWithdrawModalOpen(false)\r\n            }\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        }).finally(fn=>{\r\n            dispatch(checking_transaction(false))\r\n        })\r\n    }\r\n}\r\nexport const checking_transaction = (is_checking)=>{\r\n    return {\r\n        type: CHECKING_TRANSACTION,\r\n        payload: is_checking\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}