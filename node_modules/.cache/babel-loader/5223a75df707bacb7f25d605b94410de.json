{"ast":null,"code":"import axios from \"axios\";\nimport { sessionService } from 'redux-react-session';\nexport const UPDATE_WALLET_LIST = \"UPDATE_WALLET_LIST\";\nexport const UPDATE_FETCHING_STATE = \"UPDATE_FETCHING_STATE\";\nexport const get_wallet_list = () => {\n  return dispatch => {\n    dispatch(update_fetching_state(true));\n    return new Promise((resolve, reject) => {\n      sessionService.loadSession().then(session => {\n        axios.get(\"https://hi-exchange.com/api/v2/wallet/list/\").then(res => {\n          const d = [{\n            balance: 0.1,\n            service: {\n              small_name_sulg: \"BTC\",\n              show_price_irt: 1000\n            }\n          }, {\n            balance: 40,\n            service: {\n              small_name_sulg: \"LTC\",\n              show_price_irt: 100\n            }\n          }, {\n            balance: 60,\n            service: {\n              small_name_sulg: \"ETH\",\n              show_price_irt: 10\n            }\n          }];\n          dispatch(update_wallet_list(d));\n          dispatch(update_fetching_state(false));\n          return resolve(d); // dispatch(update_wallet_list(res.data))\n          // return resolve(res.data)\n        }).catch(err => {\n          console.log(err);\n          dispatch(update_fetching_state(false));\n          return reject();\n        });\n      }).catch(err => {\n        console.log(err);\n        return reject();\n      });\n    });\n  };\n};\nexport const update_wallet_list = wallet_object => {\n  return {\n    type: UPDATE_WALLET_LIST,\n    payload: wallet_object\n  };\n};\nexport const update_fetching_state = is_fetching => {\n  return {\n    type: UPDATE_FETCHING_STATE,\n    payload: is_fetching\n  };\n};","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/redux/actions/wallet.js"],"names":["axios","sessionService","UPDATE_WALLET_LIST","UPDATE_FETCHING_STATE","get_wallet_list","dispatch","update_fetching_state","Promise","resolve","reject","loadSession","then","session","get","res","d","balance","service","small_name_sulg","show_price_irt","update_wallet_list","catch","err","console","log","wallet_object","type","payload","is_fetching"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,oBAA3B;AACP,OAAO,MAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,MAAMC,eAAe,GAAG,MAAI;AAC/B,SAAOC,QAAQ,IAAE;AACbA,IAAAA,QAAQ,CAACC,qBAAqB,CAAC,IAAD,CAAtB,CAAR;AACA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAmB;AAClCR,MAAAA,cAAc,CAACS,WAAf,GAA6BC,IAA7B,CAAkCC,OAAO,IAAE;AACvCZ,QAAAA,KAAK,CAACa,GAAN,CAAU,6CAAV,EAAyDF,IAAzD,CAA8DG,GAAG,IAAE;AAE/D,gBAAMC,CAAC,GAAG,CACN;AACIC,YAAAA,OAAO,EAAE,GADb;AAEIC,YAAAA,OAAO,EAAE;AACLC,cAAAA,eAAe,EAAE,KADZ;AAELC,cAAAA,cAAc,EAAE;AAFX;AAFb,WADM,EAQN;AACIH,YAAAA,OAAO,EAAE,EADb;AAEIC,YAAAA,OAAO,EAAE;AACLC,cAAAA,eAAe,EAAE,KADZ;AAELC,cAAAA,cAAc,EAAE;AAFX;AAFb,WARM,EAeN;AACIH,YAAAA,OAAO,EAAE,EADb;AAEIC,YAAAA,OAAO,EAAE;AACLC,cAAAA,eAAe,EAAE,KADZ;AAELC,cAAAA,cAAc,EAAE;AAFX;AAFb,WAfM,CAAV;AAuBAd,UAAAA,QAAQ,CAACe,kBAAkB,CAACL,CAAD,CAAnB,CAAR;AACAV,UAAAA,QAAQ,CAACC,qBAAqB,CAAC,KAAD,CAAtB,CAAR;AACA,iBAAOE,OAAO,CAACO,CAAD,CAAd,CA3B+D,CA4B/D;AACA;AACH,SA9BD,EA8BGM,KA9BH,CA8BSC,GAAG,IAAE;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAjB,UAAAA,QAAQ,CAACC,qBAAqB,CAAC,KAAD,CAAtB,CAAR;AACA,iBAAOG,MAAM,EAAb;AACH,SAlCD;AAmCH,OApCD,EAoCGY,KApCH,CAoCSC,GAAG,IAAE;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,eAAOb,MAAM,EAAb;AACH,OAvCD;AAwCH,KAzCM,CAAP;AA4CH,GA9CD;AA+CH,CAhDM;AAiDP,OAAO,MAAMW,kBAAkB,GAAIK,aAAD,IAAiB;AAC/C,SAAO;AACHC,IAAAA,IAAI,EAAExB,kBADH;AAEHyB,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMnB,qBAAqB,GAAIsB,WAAD,IAAe;AAChD,SAAO;AACHF,IAAAA,IAAI,EAAEvB,qBADH;AAEHwB,IAAAA,OAAO,EAAEC;AAFN,GAAP;AAIH,CALM","sourcesContent":["import axios from \"axios\";\r\nimport { sessionService } from 'redux-react-session' \r\n\r\nexport const UPDATE_WALLET_LIST = \"UPDATE_WALLET_LIST\"\r\nexport const UPDATE_FETCHING_STATE = \"UPDATE_FETCHING_STATE\"\r\nexport const get_wallet_list = ()=>{\r\n    return dispatch=>{\r\n        dispatch(update_fetching_state(true))\r\n        return new Promise((resolve, reject)=>{\r\n            sessionService.loadSession().then(session=>{\r\n                axios.get(\"https://hi-exchange.com/api/v2/wallet/list/\").then(res=>{\r\n                    \r\n                    const d = [\r\n                        {\r\n                            balance: 0.1,\r\n                            service: {\r\n                                small_name_sulg: \"BTC\",\r\n                                show_price_irt: 1000\r\n                            }\r\n                        },\r\n                        {\r\n                            balance: 40,\r\n                            service: {\r\n                                small_name_sulg: \"LTC\",\r\n                                show_price_irt: 100\r\n                            }\r\n                        },\r\n                        {\r\n                            balance: 60,\r\n                            service: {\r\n                                small_name_sulg: \"ETH\",\r\n                                show_price_irt: 10\r\n                            }\r\n                        },\r\n                    ]\r\n                    dispatch(update_wallet_list(d))\r\n                    dispatch(update_fetching_state(false))\r\n                    return resolve(d)\r\n                    // dispatch(update_wallet_list(res.data))\r\n                    // return resolve(res.data)\r\n                }).catch(err=>{\r\n                    console.log(err);\r\n                    dispatch(update_fetching_state(false))\r\n                    return reject()\r\n                })\r\n            }).catch(err=>{\r\n                console.log(err);\r\n                return reject()\r\n            })\r\n        })\r\n       \r\n       \r\n    }\r\n}\r\nexport const update_wallet_list = (wallet_object)=>{\r\n    return {\r\n        type: UPDATE_WALLET_LIST,\r\n        payload: wallet_object\r\n    }\r\n}\r\nexport const update_fetching_state = (is_fetching)=>{\r\n    return {\r\n        type: UPDATE_FETCHING_STATE,\r\n        payload: is_fetching\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}