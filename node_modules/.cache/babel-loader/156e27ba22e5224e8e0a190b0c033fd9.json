{"ast":null,"code":"import { UPDATE_USER_DETAIL, UPDATE_USER_PROFILE, UPDATE_AUTH_ID, UPDATE_LOG_STATUS, UPDATE_LOG_INFO, UPDATE_USER_WALLET, USER_LOGOUT } from '../actionTypes';\nimport { sessionService } from 'redux-react-session';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nconst toastOpt = {\n  position: \"bottom-left\",\n  hideProgressBar: false,\n  closeOnClick: true,\n  draggable: true,\n  autoClose: 5000\n};\nconst BASE = \"https://hi-exchange.com\";\nexport const userLogout = _history => {\n  return () => {\n    sessionService.deleteSession();\n    sessionService.deleteUser();\n\n    _history.push(\"/opt-1\");\n  };\n};\nexport const userUpdateDetail = (token, _history) => {\n  return dispatch => {\n    axios.get(BASE + \"/api/v2/account/details/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      sessionService.saveUser({ ...data.data\n      }).then(e => {\n        if (_history) _history.push({\n          pathname: \"/\"\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const userLogin = (credentias, _history, setIsSubmitting) => {\n  return dispatch => {\n    axios.post(\"https://hi-exchange.com/api/v2/token/verify/\", credentias).then(response => {\n      const {\n        data\n      } = response;\n      const {\n        access: token,\n        refresh\n      } = data;\n      sessionService.saveSession({\n        token,\n        refresh,\n        expiresAt: new Date().getTime() + 60 * 60 * 1000,\n        refresh_time: new Date().getTime()\n      }).then(e => {\n        dispatch(userUpdateDetail(token, _history));\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      toast.error(\"کد وارد شده صحیح نمی باشد.\", toastOpt);\n    }).finally(e => {\n      setIsSubmitting(false);\n    });\n  };\n};\nexport const userUpdateName = name => {\n  return dispatch => {\n    sessionService.loadSession().then(session => {\n      axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\n        name\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + session.token\n        }\n      }).then(data => {\n        toast.success(data.data.message, toastOpt);\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"با خطا مواجه شد.\");\n      });\n    });\n  };\n};\nexport const userUpdateImage = (image, toast, toastOpt) => {\n  return dispatch => {\n    sessionService.loadSession().then(session => {\n      axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\n        image\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + session.token\n        }\n      }).then(data => {\n        toast.success(data.data.message, toastOpt);\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"با خطا مواجه شد.\");\n      });\n    });\n  };\n};\nexport const userUpdatePersonal = (email, birthdaybirthday, address) => {\n  return dispatch => {\n    sessionService.loadSession().then(session => {\n      axios.post(BASE + \"/api/v2/account/manage/\", {\n        action: \"profile\",\n        email: email,\n        birthdaybirthday,\n        address\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + session.token\n        }\n      }).then(response => {\n        const {\n          data\n        } = response;\n\n        if (data.error == 1) {\n          toast.warning(data.message, toastOpt);\n        } else {\n          toast.success(data.message, toastOpt);\n        }\n      }).catch(error => {\n        toast.error(\"با خطا مواجه شد.\", toastOpt);\n        console.log(error);\n      });\n    });\n  };\n};\nexport const udpate_user_detail = user => {\n  return {\n    type: UPDATE_USER_DETAIL,\n    payload: user\n  };\n};\nexport const udpate_user_profile = profile => {\n  return {\n    type: UPDATE_USER_PROFILE,\n    payload: profile\n  };\n};\nexport const udpate_user_wallet = wallet => {\n  return {\n    type: UPDATE_USER_WALLET,\n    payload: wallet\n  };\n};\nexport const update_auth_id = authID => {\n  return {\n    type: UPDATE_AUTH_ID,\n    payload: authID\n  };\n};\nexport const update_log_status = status => {\n  return {\n    type: UPDATE_LOG_STATUS,\n    payload: status\n  };\n};\nexport const update_log_info = (access, refresh) => {\n  return {\n    type: UPDATE_LOG_INFO,\n    payload: {\n      access,\n      refresh\n    }\n  };\n};\nexport const user_login = (access, refresh) => {\n  return dispatch => {\n    localStorage.setItem(\"hiexchange_token\", access);\n    localStorage.setItem(\"hiexchange_refresh\", refresh);\n    localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\n    dispatch(update_log_status(true));\n    dispatch(update_log_info(access, refresh));\n    dispatch(fetch_user_detail(access)); // dispatch(fetch_user_profile(token));\n  };\n};\nexport const fetch_user_detail = token => {\n  return dispatch => {\n    axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_detail(data.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const fetch_user_profile = token => {\n  return dispatch => {\n    axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_profile(data.data));\n    }).catch(error => {\n      console.log(error.response.status);\n    });\n  };\n};\nexport const logout = e => {\n  return {\n    type: USER_LOGOUT\n  };\n};\nexport const check_user_session = isLogged => {\n  return dispatch => {\n    const token = localStorage.getItem(\"hiexchange_token\");\n    const refresh_time = +localStorage.getItem(\"hiexchange_refresh_time\");\n    const refresh = localStorage.getItem(\"hiexchange_refresh\");\n\n    if (token && refresh_time && refresh) {\n      const now = new Date();\n\n      if (now.getTime() - refresh_time > 60 * 30 * 1000) {\n        axios.post(\"https://hi-exchange.com/api/v2/token/refresh/\", {\n          refresh: refresh\n        }).then(data => {\n          dispatch(user_login(data.data.access, refresh));\n        });\n      } else {\n        if (!isLogged) dispatch(user_login(token, refresh));\n      }\n    } else {\n      console.log(\"CAME\");\n      dispatch(logout());\n    }\n  };\n};","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/redux/actions/user.js"],"names":["UPDATE_USER_DETAIL","UPDATE_USER_PROFILE","UPDATE_AUTH_ID","UPDATE_LOG_STATUS","UPDATE_LOG_INFO","UPDATE_USER_WALLET","USER_LOGOUT","sessionService","axios","toast","toastOpt","position","hideProgressBar","closeOnClick","draggable","autoClose","BASE","userLogout","_history","deleteSession","deleteUser","push","userUpdateDetail","token","dispatch","get","headers","then","data","saveUser","e","pathname","catch","err","console","log","userLogin","credentias","setIsSubmitting","post","response","access","refresh","saveSession","expiresAt","Date","getTime","refresh_time","error","finally","userUpdateName","name","loadSession","session","Authorization","success","message","userUpdateImage","image","userUpdatePersonal","email","birthdaybirthday","address","action","warning","udpate_user_detail","user","type","payload","udpate_user_profile","profile","udpate_user_wallet","wallet","update_auth_id","authID","update_log_status","status","update_log_info","user_login","localStorage","setItem","fetch_user_detail","fetch_user_profile","logout","check_user_session","isLogged","getItem","now"],"mappings":"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","sourcesContent":["import {\r\n    UPDATE_USER_DETAIL,\r\n    UPDATE_USER_PROFILE,\r\n    UPDATE_AUTH_ID,\r\n    UPDATE_LOG_STATUS,\r\n    UPDATE_LOG_INFO,\r\n    UPDATE_USER_WALLET,\r\n    USER_LOGOUT,\r\n} from '../actionTypes'\r\nimport { sessionService } from 'redux-react-session'\r\nimport axios from 'axios';\r\nimport {toast } from 'react-toastify'\r\nconst toastOpt = {\r\n    position: \"bottom-left\",\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    draggable: true,\r\n    autoClose: 5000,\r\n}\r\n\r\n\r\nconst BASE = \"https://hi-exchange.com\"\r\n\r\n\r\nexport const userLogout = (_history)=>{\r\n    return ()=>{\r\n        sessionService.deleteSession();\r\n        sessionService.deleteUser();\r\n        _history.push(\"/opt-1\")\r\n    }\r\n}\r\nexport const userUpdateDetail = (token, _history)=>{\r\n    return dispatch=>{\r\n\r\n        axios.get(BASE + \"/api/v2/account/details/\", {\r\n            headers: {\r\n            \"Authorization\": \"Bearer \"+token,\r\n        }\r\n        }).then(data=>{\r\n            sessionService.saveUser({ ...data.data }).then(e=>{\r\n                if(_history)\r\n                    _history.push({pathname: \"/\"});\r\n            })\r\n        }).catch(err=>{\r\n                console.log(err);\r\n        })\r\n    }\r\n}\r\nexport const userLogin = (credentias, _history ,setIsSubmitting)=>{\r\n    return dispatch=>{\r\n\r\n        axios.post(\"https://hi-exchange.com/api/v2/token/verify/\", credentias)\r\n            .then(response=>{\r\n                const {data} = response\r\n                const {access:token, refresh} = data;\r\n                sessionService\r\n                .saveSession({ token, refresh, expiresAt: new Date().getTime()+60*60*1000, refresh_time: new Date().getTime() }).then(e=>{\r\n                    dispatch(userUpdateDetail(token, _history))\r\n                }).catch(err=>{\r\n                    console.log(err);\r\n                })\r\n            }).catch(err=>{\r\n                toast.error(\"کد وارد شده صحیح نمی باشد.\", toastOpt)\r\n            }).finally(e=>{\r\n                \r\n                setIsSubmitting(false);\r\n            })\r\n    }\r\n}\r\nexport const userUpdateName =  (name)=>{\r\n    return dispatch=>{\r\n        sessionService.loadSession().then(session=>{\r\n            axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\r\n                name\r\n            },\r\n            {headers:{\r\n                Authorization: \"Bearer \" + session.token\r\n            }}\r\n            ).then(data=>{\r\n                toast.success(data.data.message, toastOpt);  \r\n            }).catch(err=>{\r\n                console.log(err);\r\n                toast.error(\"با خطا مواجه شد.\")\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const userUpdateImage =  (image, toast, toastOpt)=>{\r\n    return dispatch=>{\r\n        sessionService.loadSession().then(session=>{\r\n            axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\r\n                image\r\n            },\r\n            {headers:{\r\n                Authorization: \"Bearer \" + session.token\r\n            }}\r\n            ).then(data=>{\r\n                toast.success(data.data.message, toastOpt);  \r\n            }).catch(err=>{\r\n                console.log(err);\r\n                toast.error(\"با خطا مواجه شد.\")\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const userUpdatePersonal = (email, birthdaybirthday, address)=>{\r\n    return dispatch=>{\r\n        \r\n        sessionService.loadSession().then(session=>{\r\n            axios.post(BASE+\"/api/v2/account/manage/\", {\r\n                action: \"profile\",\r\n                email: email,\r\n                birthdaybirthday,\r\n                address            \r\n            },{\r\n                headers:{\r\n                    Authorization: \"Bearer \" + session.token\r\n                }\r\n            }).then(response=>{\r\n                const {data} = response;\r\n                if (data.error == 1){\r\n                    toast.warning(data.message, toastOpt);\r\n                }else{\r\n                    toast.success(data.message, toastOpt)\r\n                }\r\n            }).catch(error=>{\r\n                toast.error(\"با خطا مواجه شد.\", toastOpt)\r\n                console.log(error)\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const udpate_user_detail = (user)=>{\r\n    return {\r\n        type: UPDATE_USER_DETAIL,\r\n        payload: user\r\n    }\r\n}\r\nexport const udpate_user_profile = (profile)=>{\r\n    return {\r\n        type: UPDATE_USER_PROFILE,\r\n        payload: profile\r\n    }\r\n}\r\n\r\nexport const udpate_user_wallet = (wallet)=>{\r\n    return {\r\n        type: UPDATE_USER_WALLET,\r\n        payload: wallet\r\n    }\r\n}\r\nexport const update_auth_id = (authID)=>{\r\n    return {\r\n        type: UPDATE_AUTH_ID,\r\n        payload: authID\r\n    }\r\n}\r\nexport const update_log_status = (status)=>{\r\n    return {\r\n        type: UPDATE_LOG_STATUS,\r\n        payload: status\r\n    }\r\n}\r\nexport const update_log_info = (access, refresh)=>{\r\n    return {\r\n        type: UPDATE_LOG_INFO,\r\n        payload: {access, refresh}\r\n    }\r\n}\r\nexport const user_login = (access, refresh)=>{\r\n    return dispatch=>{\r\n        localStorage.setItem(\"hiexchange_token\", access);\r\n        localStorage.setItem(\"hiexchange_refresh\", refresh);\r\n        localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\r\n        dispatch(update_log_status(true))\r\n        dispatch(update_log_info(access, refresh));\r\n        dispatch(fetch_user_detail(access));\r\n            // dispatch(fetch_user_profile(token));\r\n    }\r\n}\r\nexport const fetch_user_detail = (token)=>{\r\n    return (dispatch) => {\r\n        axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token,\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_detail(data.data))\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\nexport const fetch_user_profile = (token)=>{\r\n    return (dispatch) => {\r\n        axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_profile(data.data))\r\n        }).catch(error=>{\r\n            console.log(error.response.status);\r\n        })\r\n    }\r\n}\r\nexport const logout = e=>{\r\n    return {\r\n        type: USER_LOGOUT\r\n    }\r\n}\r\nexport const check_user_session = (isLogged)=>{\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"hiexchange_token\");\r\n        const refresh_time = +localStorage.getItem(\"hiexchange_refresh_time\");\r\n        const refresh = localStorage.getItem(\"hiexchange_refresh\");\r\n        if(token && refresh_time && refresh){\r\n            const now = new Date()\r\n            if (now.getTime() - refresh_time > 60*30*1000){\r\n                axios.post(\"https://hi-exchange.com/api/v2/token/refresh/\", {\r\n                    refresh: refresh\r\n                }).then(data=>{\r\n                     dispatch(user_login(data.data.access, refresh));\r\n                }) \r\n            }else{\r\n                if (!isLogged)\r\n                dispatch(user_login(token, refresh));\r\n            }\r\n        }else{\r\n            console.log(\"CAME\")\r\n            dispatch(logout())\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}