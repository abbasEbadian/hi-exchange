{"ast":null,"code":"import { UPDATE_USER_DETAIL, UPDATE_USER_PROFILE, UPDATE_AUTH_ID, UPDATE_LOG_STATUS, UPDATE_LOG_INFO, UPDATE_USER_WALLET, USER_LOGOUT } from '../actionTypes';\nimport { sessionService } from 'redux-react-session';\nimport axios from 'axios';\nexport const userLogout = _history => {\n  return () => {\n    sessionService.deleteSession();\n    sessionService.deleteUser();\n\n    _history.push(\"/opt-1\");\n  };\n};\nexport const userUpdateDetail = (token, _history) => {\n  return dispatch => {\n    axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      sessionService.saveUser({ ...data.data\n      }).then(e => {\n        if (_history) history.push({\n          pathname: \"/\"\n        });\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const userLogin = (credentias, _history, setIsSubmitting) => {\n  return dispatch => {\n    axios.post(\"https://hi-exchange.com/api/v2/token/verify/\", credentias).then(response => {\n      const {\n        data\n      } = response;\n      const {\n        access: token,\n        refresh\n      } = data;\n      sessionService.saveSession({\n        token,\n        refresh,\n        time: new Date().getTime()\n      }).then(e => {\n        dispatch(userUpdateDetail(token, _history));\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {// toast.error(\"کد وارد شده صحیح نمی باشد.\", toastOpt)\n    }).finally(e => {\n      setIsSubmitting(false);\n    });\n  };\n};\nexport const userUpdateName = (name, toast, toastOpt) => {\n  return dispatch => {\n    sessionService.loadSession().then(session => {\n      axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\n        name\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + session.token\n        }\n      }).then(data => {\n        toast.success(data.data.message, toastOpt);\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"با خطا مواجه شد.\");\n      });\n    });\n  };\n};\nexport const userUpdateImage = (image, toast, toastOpt) => {\n  return dispatch => {\n    sessionService.loadSession().then(session => {\n      axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\n        image\n      }, {\n        headers: {\n          Authorization: \"Bearer \" + session.token\n        }\n      }).then(data => {\n        toast.success(data.data.message, toastOpt);\n      }).catch(err => {\n        console.log(err);\n        toast.error(\"با خطا مواجه شد.\");\n      });\n    });\n  };\n};\nexport const udpate_user_detail = user => {\n  return {\n    type: UPDATE_USER_DETAIL,\n    payload: user\n  };\n};\nexport const udpate_user_profile = profile => {\n  return {\n    type: UPDATE_USER_PROFILE,\n    payload: profile\n  };\n};\nexport const udpate_user_wallet = wallet => {\n  return {\n    type: UPDATE_USER_WALLET,\n    payload: wallet\n  };\n};\nexport const update_auth_id = authID => {\n  return {\n    type: UPDATE_AUTH_ID,\n    payload: authID\n  };\n};\nexport const update_log_status = status => {\n  return {\n    type: UPDATE_LOG_STATUS,\n    payload: status\n  };\n};\nexport const update_log_info = (access, refresh) => {\n  return {\n    type: UPDATE_LOG_INFO,\n    payload: {\n      access,\n      refresh\n    }\n  };\n};\nexport const user_login = (access, refresh) => {\n  return dispatch => {\n    localStorage.setItem(\"hiexchange_token\", access);\n    localStorage.setItem(\"hiexchange_refresh\", refresh);\n    localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\n    dispatch(update_log_status(true));\n    dispatch(update_log_info(access, refresh));\n    dispatch(fetch_user_detail(access)); // dispatch(fetch_user_profile(token));\n  };\n};\nexport const fetch_user_detail = token => {\n  return dispatch => {\n    axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_detail(data.data));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const fetch_user_profile = token => {\n  return dispatch => {\n    axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\n      headers: {\n        \"Authorization\": \"Bearer \" + token\n      }\n    }).then(data => {\n      dispatch(udpate_user_profile(data.data));\n    }).catch(error => {\n      console.log(error.response.status);\n    });\n  };\n};\nexport const logout = e => {\n  return {\n    type: USER_LOGOUT\n  };\n};\nexport const check_user_session = isLogged => {\n  return dispatch => {\n    const token = localStorage.getItem(\"hiexchange_token\");\n    const refresh_time = +localStorage.getItem(\"hiexchange_refresh_time\");\n    const refresh = localStorage.getItem(\"hiexchange_refresh\");\n\n    if (token && refresh_time && refresh) {\n      const now = new Date();\n\n      if (now.getTime() - refresh_time > 60 * 30 * 1000) {\n        axios.post(\"https://hi-exchange.com/api/v2/token/refresh/\", {\n          refresh: refresh\n        }).then(data => {\n          dispatch(user_login(data.data.access, refresh));\n        });\n      } else {\n        if (!isLogged) dispatch(user_login(token, refresh));\n      }\n    } else {\n      console.log(\"CAME\");\n      dispatch(logout());\n    }\n  };\n};","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/redux/actions/user.js"],"names":["UPDATE_USER_DETAIL","UPDATE_USER_PROFILE","UPDATE_AUTH_ID","UPDATE_LOG_STATUS","UPDATE_LOG_INFO","UPDATE_USER_WALLET","USER_LOGOUT","sessionService","axios","userLogout","_history","deleteSession","deleteUser","push","userUpdateDetail","token","dispatch","get","headers","then","data","saveUser","e","history","pathname","catch","err","console","log","userLogin","credentias","setIsSubmitting","post","response","access","refresh","saveSession","time","Date","getTime","finally","userUpdateName","name","toast","toastOpt","loadSession","session","Authorization","success","message","error","userUpdateImage","image","udpate_user_detail","user","type","payload","udpate_user_profile","profile","udpate_user_wallet","wallet","update_auth_id","authID","update_log_status","status","update_log_info","user_login","localStorage","setItem","fetch_user_detail","fetch_user_profile","logout","check_user_session","isLogged","getItem","refresh_time","now"],"mappings":"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","sourcesContent":["import {\r\n    UPDATE_USER_DETAIL,\r\n    UPDATE_USER_PROFILE,\r\n    UPDATE_AUTH_ID,\r\n    UPDATE_LOG_STATUS,\r\n    UPDATE_LOG_INFO,\r\n    UPDATE_USER_WALLET,\r\n    USER_LOGOUT,\r\n} from '../actionTypes'\r\nimport { sessionService } from 'redux-react-session'\r\nimport axios from 'axios';\r\n\r\nexport const userLogout = (_history)=>{\r\n    return ()=>{\r\n        sessionService.deleteSession();\r\n        sessionService.deleteUser();\r\n        _history.push(\"/opt-1\")\r\n    }\r\n}\r\nexport const userUpdateDetail = (token, _history)=>{\r\n    return dispatch=>{\r\n\r\n        axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\r\n            headers: {\r\n            \"Authorization\": \"Bearer \"+token,\r\n        }\r\n        }).then(data=>{\r\n            sessionService.saveUser({ ...data.data }).then(e=>{\r\n                if(_history)\r\n                    history.push({pathname: \"/\"});\r\n            })\r\n        }).catch(err=>{\r\n                console.log(err);\r\n        })\r\n    }\r\n}\r\nexport const userLogin = (credentias, _history ,setIsSubmitting)=>{\r\n    return dispatch=>{\r\n\r\n        axios.post(\"https://hi-exchange.com/api/v2/token/verify/\", credentias)\r\n            .then(response=>{\r\n                const {data} = response\r\n                const {access:token, refresh} = data;\r\n                sessionService.saveSession({ token, refresh, time: new Date().getTime() }).then(e=>{\r\n                    dispatch(userUpdateDetail(token, _history))\r\n                }).catch(err=>{\r\n                    console.log(err);\r\n                })\r\n            }).catch(err=>{\r\n                // toast.error(\"کد وارد شده صحیح نمی باشد.\", toastOpt)\r\n            }).finally(e=>{\r\n                \r\n                setIsSubmitting(false);\r\n            })\r\n    }\r\n}\r\nexport const userUpdateName =  (name, toast, toastOpt)=>{\r\n    return dispatch=>{\r\n        sessionService.loadSession().then(session=>{\r\n            axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\r\n                name\r\n            },\r\n            {headers:{\r\n                Authorization: \"Bearer \" + session.token\r\n            }}\r\n            ).then(data=>{\r\n                toast.success(data.data.message, toastOpt);  \r\n            }).catch(err=>{\r\n                console.log(err);\r\n                toast.error(\"با خطا مواجه شد.\")\r\n            })\r\n        })\r\n    }\r\n}\r\nexport const userUpdateImage =  (image, toast, toastOpt)=>{\r\n    return dispatch=>{\r\n        sessionService.loadSession().then(session=>{\r\n            axios.post(\"https://hi-exchange.com/api/v2/account/verify/\", {\r\n                image\r\n            },\r\n            {headers:{\r\n                Authorization: \"Bearer \" + session.token\r\n            }}\r\n            ).then(data=>{\r\n                toast.success(data.data.message, toastOpt);  \r\n            }).catch(err=>{\r\n                console.log(err);\r\n                toast.error(\"با خطا مواجه شد.\")\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const udpate_user_detail = (user)=>{\r\n    return {\r\n        type: UPDATE_USER_DETAIL,\r\n        payload: user\r\n    }\r\n}\r\nexport const udpate_user_profile = (profile)=>{\r\n    return {\r\n        type: UPDATE_USER_PROFILE,\r\n        payload: profile\r\n    }\r\n}\r\n\r\nexport const udpate_user_wallet = (wallet)=>{\r\n    return {\r\n        type: UPDATE_USER_WALLET,\r\n        payload: wallet\r\n    }\r\n}\r\nexport const update_auth_id = (authID)=>{\r\n    return {\r\n        type: UPDATE_AUTH_ID,\r\n        payload: authID\r\n    }\r\n}\r\nexport const update_log_status = (status)=>{\r\n    return {\r\n        type: UPDATE_LOG_STATUS,\r\n        payload: status\r\n    }\r\n}\r\nexport const update_log_info = (access, refresh)=>{\r\n    return {\r\n        type: UPDATE_LOG_INFO,\r\n        payload: {access, refresh}\r\n    }\r\n}\r\nexport const user_login = (access, refresh)=>{\r\n    return dispatch=>{\r\n        localStorage.setItem(\"hiexchange_token\", access);\r\n        localStorage.setItem(\"hiexchange_refresh\", refresh);\r\n        localStorage.setItem(\"hiexchange_refresh_time\", new Date().getTime());\r\n        dispatch(update_log_status(true))\r\n        dispatch(update_log_info(access, refresh));\r\n        dispatch(fetch_user_detail(access));\r\n            // dispatch(fetch_user_profile(token));\r\n    }\r\n}\r\nexport const fetch_user_detail = (token)=>{\r\n    return (dispatch) => {\r\n        axios.get(\"https://hi-exchange.com/api/v2/account/details/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token,\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_detail(data.data))\r\n        }).catch(err=>{\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\nexport const fetch_user_profile = (token)=>{\r\n    return (dispatch) => {\r\n        axios.post(\"https://hi-exchange.com/api/v2/account/manage/\", {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \"+token\r\n            }\r\n        }).then(data=>{\r\n            dispatch(udpate_user_profile(data.data))\r\n        }).catch(error=>{\r\n            console.log(error.response.status);\r\n        })\r\n    }\r\n}\r\nexport const logout = e=>{\r\n    return {\r\n        type: USER_LOGOUT\r\n    }\r\n}\r\nexport const check_user_session = (isLogged)=>{\r\n    return dispatch => {\r\n        const token = localStorage.getItem(\"hiexchange_token\");\r\n        const refresh_time = +localStorage.getItem(\"hiexchange_refresh_time\");\r\n        const refresh = localStorage.getItem(\"hiexchange_refresh\");\r\n        if(token && refresh_time && refresh){\r\n            const now = new Date()\r\n            if (now.getTime() - refresh_time > 60*30*1000){\r\n                axios.post(\"https://hi-exchange.com/api/v2/token/refresh/\", {\r\n                    refresh: refresh\r\n                }).then(data=>{\r\n                     dispatch(user_login(data.data.access, refresh));\r\n                }) \r\n            }else{\r\n                if (!isLogged)\r\n                dispatch(user_login(token, refresh));\r\n            }\r\n        }else{\r\n            console.log(\"CAME\")\r\n            dispatch(logout())\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}