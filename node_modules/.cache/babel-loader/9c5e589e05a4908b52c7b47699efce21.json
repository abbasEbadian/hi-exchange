{"ast":null,"code":"import { UPDATE_CONVERT_RATES, UPDATE_CURRENCIES } from '../actionTypes';\nimport axios from 'axios';\nimport { fetchApi } from '../../api/api';\n\nfunction convertToRates(cl) {\n  /* \r\n  *   @param cl : currencyList fetched from server api/v2/service/list/\r\n  *   @type : object\r\n  * \r\n  *   @retruns rates: object\r\n  *   containing two way rates\r\n  *   {\"BTC/ETH\" : 50, \"ETH/BTH\": 1/50 }\r\n  */\n  let rates = {};\n\n  for (let i = 0; i < cl.length; i++) for (let j = i; j < cl.length; j++) {\n    let cur1 = cl[i],\n        cur2 = cl[j];\n    let key1 = cur1[\"small_name_slug\"] + \"/\" + cur2[\"small_name_slug\"];\n    let key2 = cur2[\"small_name_slug\"] + \"/\" + cur1[\"small_name_slug\"];\n    let rate1 = cur1[\"fix_buy_price\"] / cur2[\"fix_buy_price\"];\n    rates[key1] = rate1;\n    rates[key2] = 1 / rate1;\n  }\n\n  return rates;\n}\n\nexport const update_convert_rates = rates => {\n  return {\n    type: UPDATE_CONVERT_RATES,\n    payload: rates\n  };\n};\nexport const update_currencies = currencies => {\n  return {\n    type: UPDATE_CURRENCIES,\n    payload: currencies\n  };\n};\nexport const fetch_currencies = () => {\n  return dispatch => {\n    fetchApi(\"get\", \"/api/v2/service/list/\", {}).then(data => {\n      dispatch(update_currencies(data.data));\n      dispatch(update_convert_rates(convertToRates(data.data)));\n    });\n  };\n};","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/redux/actions/currencies.js"],"names":["UPDATE_CONVERT_RATES","UPDATE_CURRENCIES","axios","fetchApi","convertToRates","cl","rates","i","length","j","cur1","cur2","key1","key2","rate1","update_convert_rates","type","payload","update_currencies","currencies","fetch_currencies","dispatch","then","data"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,iBAA/B,QAAwD,gBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;AACA,SAASC,cAAT,CAAwBC,EAAxB,EAA2B;AACvB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AAEI,MAAIC,KAAK,GAAG,EAAZ;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,EAAE,CAACG,MAAlB,EAA2BD,CAAC,EAA5B,EACI,KAAI,IAAIE,CAAC,GAACF,CAAV,EAAaE,CAAC,GAAEJ,EAAE,CAACG,MAAnB,EAA2BC,CAAC,EAA5B,EAA+B;AAC3B,QAAIC,IAAI,GAAGL,EAAE,CAACE,CAAD,CAAb;AAAA,QAAkBI,IAAI,GAAGN,EAAE,CAACI,CAAD,CAA3B;AACA,QAAIG,IAAI,GAAGF,IAAI,CAAC,iBAAD,CAAJ,GAA0B,GAA1B,GAAgCC,IAAI,CAAC,iBAAD,CAA/C;AACA,QAAIE,IAAI,GAAGF,IAAI,CAAC,iBAAD,CAAJ,GAA0B,GAA1B,GAAgCD,IAAI,CAAC,iBAAD,CAA/C;AACA,QAAII,KAAK,GAAGJ,IAAI,CAAC,eAAD,CAAJ,GAAwBC,IAAI,CAAC,eAAD,CAAxC;AAEAL,IAAAA,KAAK,CAACM,IAAD,CAAL,GAAcE,KAAd;AACAR,IAAAA,KAAK,CAACO,IAAD,CAAL,GAAc,IAAEC,KAAhB;AACH;;AACL,SAAOR,KAAP;AACH;;AACD,OAAO,MAAMS,oBAAoB,GAAIT,KAAD,IAAS;AACzC,SAAO;AACHU,IAAAA,IAAI,EAAEhB,oBADH;AAEHiB,IAAAA,OAAO,EAAEX;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMY,iBAAiB,GAAIC,UAAD,IAAc;AAC3C,SAAO;AACHH,IAAAA,IAAI,EAAEf,iBADH;AAEHgB,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALM;AAMP,OAAO,MAAMC,gBAAgB,GAAG,MAAI;AAChC,SAAOC,QAAQ,IAAE;AACblB,IAAAA,QAAQ,CAAC,KAAD,EAAQ,uBAAR,EAAiC,EAAjC,CAAR,CACCmB,IADD,CACMC,IAAI,IAAE;AACRF,MAAAA,QAAQ,CAACH,iBAAiB,CAACK,IAAI,CAACA,IAAN,CAAlB,CAAR;AACAF,MAAAA,QAAQ,CAACN,oBAAoB,CAACX,cAAc,CAACmB,IAAI,CAACA,IAAN,CAAf,CAArB,CAAR;AACH,KAJD;AAKH,GAND;AAOH,CARM","sourcesContent":["import { UPDATE_CONVERT_RATES, UPDATE_CURRENCIES } from '../actionTypes' \r\nimport axios from 'axios';\r\nimport {fetchApi} from '../../api/api'\r\nfunction convertToRates(cl){\r\n    /* \r\n    *   @param cl : currencyList fetched from server api/v2/service/list/\r\n    *   @type : object\r\n    * \r\n    *   @retruns rates: object\r\n    *   containing two way rates\r\n    *   {\"BTC/ETH\" : 50, \"ETH/BTH\": 1/50 }\r\n    */\r\n\r\n    let rates = {}\r\n    for(let i=0; i<cl.length ; i++)\r\n        for(let j=i; j< cl.length; j++){\r\n            let cur1 = cl[i], cur2 = cl[j];\r\n            let key1 = cur1[\"small_name_slug\"] + \"/\" + cur2[\"small_name_slug\"]\r\n            let key2 = cur2[\"small_name_slug\"] + \"/\" + cur1[\"small_name_slug\"]\r\n            let rate1 = cur1[\"fix_buy_price\"] / cur2[\"fix_buy_price\"];\r\n\r\n            rates[key1] = rate1; \r\n            rates[key2] = 1/rate1; \r\n        }\r\n    return rates\r\n}\r\nexport const update_convert_rates = (rates)=>{\r\n    return {\r\n        type: UPDATE_CONVERT_RATES,\r\n        payload: rates \r\n    }\r\n}\r\nexport const update_currencies = (currencies)=>{\r\n    return {\r\n        type: UPDATE_CURRENCIES,\r\n        payload: currencies \r\n    }\r\n}\r\nexport const fetch_currencies = ()=>{\r\n    return dispatch=>{\r\n        fetchApi(\"get\", \"/api/v2/service/list/\", {})\r\n        .then(data=>{\r\n            dispatch(update_currencies(data.data))\r\n            dispatch(update_convert_rates(convertToRates(data.data)));\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}