{"ast":null,"code":"var _jsxFileName = \"H:\\\\Projects\\\\package\\\\cheerio\\\\src\\\\jsx\\\\charts\\\\radial.jsx\";\nimport React, { Component, useState, useContext, useEffect } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { UserContext } from \"../UserContext\";\n\nconst RadialChart = props => {\n  const [series, setSeries] = useState([]);\n  const [labels, setLabels] = useState([]);\n  const currentUser = props.currentUser;\n  const chart_details = {\n    series: series,\n    options: {\n      chart: {\n        height: 300,\n        type: 'radialBar'\n      },\n      tooltip: {\n        enabled: true,\n        enabledOnSeries: undefined,\n        shared: true,\n        followCursor: false,\n        intersect: false,\n        inverseOrder: false,\n        fillSeriesColor: false,\n        theme: \"light\",\n        style: {\n          fontSize: '14px',\n          fontFamily: undefined,\n          justifyContent: 'space-between'\n        },\n        onDatasetHover: {\n          highlightDataSeries: false\n        },\n        x: {\n          show: true,\n          format: 'dd MMM',\n          formatter: undefined\n        },\n        y: {\n          formatter: undefined,\n          title: {\n            formatter: seriesName => seriesName\n          }\n        },\n        z: {\n          formatter: undefined,\n          title: 'Size: '\n        },\n        marker: {\n          show: false\n        },\n        items: {\n          display: \"flex\"\n        },\n        fixed: {\n          enabled: false,\n          position: 'topRight',\n          offsetX: 0,\n          offsetY: 0\n        }\n      },\n      plotOptions: {\n        radialBar: {\n          offsetY: 0,\n          startAngle: 0,\n          endAngle: 360,\n          hollow: {\n            margin: 5,\n            size: '30%',\n            background: 'transparent',\n            image: undefined\n          },\n          dataLabels: {\n            name: {\n              show: false\n            },\n            value: {\n              show: false\n            }\n          }\n        }\n      },\n      colors: ['rgba(137, 22, 255,1)', 'rgba(137, 22, 255,0.7)', 'rgba(137, 22, 255,0.3)', 'rgba(137, 22, 255,0.1)'],\n      labels: labels,\n      legend: {\n        show: false,\n        floating: true,\n        fontSize: '16px',\n        position: 'left',\n        offsetX: 160,\n        offsetY: 15,\n        labels: {\n          useSeriesColors: true\n        },\n        markers: {\n          size: 0\n        },\n        formatter: function (seriesName, opts) {\n          return seriesName + \":  \" + opts.w.globals.series[opts.seriesIndex];\n        },\n        itemMargin: {\n          vertical: 3\n        }\n      },\n      responsive: [{\n        breakpoint: 480,\n        options: {\n          legend: {\n            show: false\n          }\n        }\n      }]\n    }\n  };\n\n  if (currentUser && currentUser.currencies && !series.length) {\n    setLabels(Object.keys(currentUser.currencies));\n    setSeries(Object.values(currentUser.currencies));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, series.length ? /*#__PURE__*/React.createElement(ReactApexChart, {\n    options: chart_details.options,\n    series: series,\n    type: \"radialBar\",\n    height: 360,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default RadialChart;","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/jsx/charts/radial.jsx"],"names":["React","Component","useState","useContext","useEffect","ReactApexChart","UserContext","RadialChart","props","series","setSeries","labels","setLabels","currentUser","chart_details","options","chart","height","type","tooltip","enabled","enabledOnSeries","undefined","shared","followCursor","intersect","inverseOrder","fillSeriesColor","theme","style","fontSize","fontFamily","justifyContent","onDatasetHover","highlightDataSeries","x","show","format","formatter","y","title","seriesName","z","marker","items","display","fixed","position","offsetX","offsetY","plotOptions","radialBar","startAngle","endAngle","hollow","margin","size","background","image","dataLabels","name","value","colors","legend","floating","useSeriesColors","markers","opts","w","globals","seriesIndex","itemMargin","vertical","responsive","breakpoint","currencies","length","Object","keys","values"],"mappings":"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","sourcesContent":["\r\nimport React, { Component, useState, useContext, useEffect } from \"react\";\r\nimport ReactApexChart from \"react-apexcharts\";\r\nimport { UserContext } from \"../UserContext\";\r\n\r\n\r\n\r\nconst RadialChart = props =>{\r\n    const [series, setSeries] = useState([]);\r\n    const [labels, setLabels] = useState([]);\r\n    \r\n    const  currentUser  = props.currentUser;\r\n    const chart_details = {\r\n        series: series,\r\n        options: {\r\n            chart: {\r\n                height: 300,\r\n                type: 'radialBar',\r\n            },\r\n            tooltip: {\r\n                enabled: true,\r\n                enabledOnSeries: undefined,\r\n                shared: true,\r\n                followCursor: false,\r\n                intersect: false,\r\n                inverseOrder: false,\r\n                \r\n                fillSeriesColor: false,\r\n                theme: \"light\",\r\n                style: {\r\n                    fontSize: '14px',\r\n                    fontFamily: undefined,\r\n                    justifyContent: 'space-between'\r\n                },\r\n                onDatasetHover: {\r\n                    highlightDataSeries: false,\r\n                },\r\n                x: {\r\n                    show: true,\r\n                    format: 'dd MMM',\r\n                    formatter: undefined,\r\n                },\r\n                y: {\r\n                    formatter: undefined,\r\n                    title: {\r\n                        formatter: (seriesName) => seriesName,\r\n                    },\r\n                },\r\n                z: {\r\n                    formatter: undefined,\r\n                    title: 'Size: '\r\n                },\r\n                marker: {\r\n                    show: false,\r\n                },\r\n                items: {\r\n                    display: \"flex\",\r\n                },\r\n                fixed: {\r\n                    enabled: false,\r\n                    position: 'topRight',\r\n                    offsetX: 0,\r\n                    offsetY: 0,\r\n                },\r\n                \r\n            },\r\n            plotOptions: {\r\n                radialBar: {\r\n                    offsetY: 0,\r\n                    startAngle: 0,\r\n                    endAngle: 360,\r\n                    hollow: {\r\n                        margin: 5,\r\n                        size: '30%',\r\n                        background: 'transparent',\r\n                        image: undefined,\r\n                    },\r\n                    dataLabels: {\r\n                        name: {\r\n                            show: false,\r\n                        },\r\n                        value: {\r\n                            show: false,\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            colors: [\r\n                'rgba(137, 22, 255,1)',\r\n                'rgba(137, 22, 255,0.7)',\r\n                'rgba(137, 22, 255,0.3)',\r\n                'rgba(137, 22, 255,0.1)'\r\n            ],\r\n            labels: labels,\r\n            legend: {\r\n                show: false,\r\n                floating: true,\r\n                fontSize: '16px',\r\n                position: 'left',\r\n                offsetX: 160,\r\n                offsetY: 15,\r\n                labels: {\r\n                    useSeriesColors: true,\r\n                },\r\n                markers: {\r\n                    size: 0\r\n                },\r\n                formatter: function (seriesName, opts) {\r\n                    return seriesName + \":  \" + opts.w.globals.series[opts.seriesIndex]\r\n                },\r\n                itemMargin: {\r\n                    vertical: 3\r\n                }\r\n            },\r\n            responsive: [{\r\n                breakpoint: 480,\r\n                options: {\r\n                    legend: {\r\n                        show: false\r\n                    }\r\n                }\r\n            }]\r\n        },\r\n\r\n\r\n    }\r\n    if (currentUser && currentUser.currencies && !series.length){\r\n        setLabels(Object.keys(currentUser.currencies));\r\n        setSeries(Object.values(currentUser.currencies));\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            series.length ?\r\n            <ReactApexChart options={chart_details.options} series={series} type=\"radialBar\" height={360} />\r\n            :\r\n            <span></span>\r\n        }\r\n        </>\r\n\r\n\r\n\r\n    );\r\n    \r\n}\r\n\r\nexport default RadialChart;"]},"metadata":{},"sourceType":"module"}