{"ast":null,"code":"var _jsxFileName = \"H:\\\\Projects\\\\package\\\\cheerio\\\\src\\\\jsx\\\\element\\\\convert.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card, Tooltip } from 'react-bootstrap';\nimport { right } from '@popperjs/core';\nimport { UserContext } from '../UserContext';\nimport { get } from 'http';\nimport { log } from 'util';\nimport { useStateWithCallbackLazy } from 'use-state-with-callback';\n\nfunction Convert() {\n  const [convertAmount, setConvertAmount] = useStateWithCallbackLazy(0);\n  const [currencyTo, setCurrencyTo] = useStateWithCallbackLazy({\n    symbol: null,\n    fullName: null,\n    persianName: null\n  });\n  const [currencyFrom, setCurrencyFrom] = useStateWithCallbackLazy({\n    symbol: null,\n    fullName: null,\n    persianName: null\n  });\n  const [currencyAvailable, setCurrencyAvailable] = useState(0);\n  const {\n    currencyList,\n    karmozd,\n    user\n  } = useContext(UserContext);\n  const [tooltipOpen, setTooltipOpen] = useState(false);\n  let karmozdAmount = 0;\n  let conversionResult = 0;\n  let endPrice = 0;\n  const ratio = {\n    \"BTC-LTC\": 10,\n    \"BTC-MTC\": 20,\n    \"BTC-STC\": 30,\n    \"BTC-WTC\": 40\n  };\n\n  const computePrices = e => {\n    if (!currencyFrom.symbol || !currencyTo.symbol || !convertAmount) return;\n    let key = `${currencyFrom.symbol}-${currencyTo.symbol}`;\n    let rate = ratio[key];\n    conversionResult = Math.round(1000 * (rate * convertAmount) || 0) / 1000;\n    karmozdAmount = Math.round(1000 * karmozd * conversionResult) / 1000 || 0;\n    endPrice = Math.round(1000 * (convertAmount / conversionResult)) / 1000;\n  };\n\n  const changeConvertAmount = e => {\n    let enteredValue = e.target.value;\n    enteredValue = Math.min(enteredValue, currencyAvailable || 999999999);\n    setConvertAmount(enteredValue);\n  };\n\n  const changeCurrencyFrom = e => {\n    let selectedCurrency = e.target.value;\n    if (!selectedCurrency) return;\n    selectedCurrency = currencyList.filter((c, idx) => c.fullName == selectedCurrency)[0];\n    let sym = selectedCurrency.symbol;\n    let av = Object.keys(user.currencies).includes(sym) && user.currencies[sym] || 0;\n    setConvertAmount(Math.min(convertAmount, av));\n    setCurrencyFrom(selectedCurrency);\n    setCurrencyAvailable(av);\n  };\n\n  const changeCurrencyTo = e => {\n    let selectedCurrency = e.target.value;\n    if (!selectedCurrency) return;\n    selectedCurrency = currencyList.filter((c, idx) => c.fullName == selectedCurrency)[0];\n    setCurrencyTo(selectedCurrency);\n  };\n\n  computePrices();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, `\n                    .form-label{\n                        padding-right: 4px;\n                    }\n                `), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, \"\\u062A\\u0628\\u062F\\u06CC\\u0644\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buy-sell-widget convert-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    name: \"myform\",\n    className: \"currency_validate row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-xl-4 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    htmlFor: \"currency_amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, \"\\u0645\\u0642\\u062F\\u0627\\u0631\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    name: \"currency_amount\",\n    className: \"form-control\",\n    value: convertAmount,\n    onChange: changeConvertAmount,\n    placeholder: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-xl-4 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 33\n    }\n  }, \"\\u0627\\u0631\\u0632 \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"currency\",\n    className: \"form-control\",\n    onChange: changeCurrencyFrom,\n    value: currencyFrom.fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 37\n    }\n  }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\"), currencyList.map((c, idx) => {\n    return Object.keys(user.currencies).includes(c.symbol) && /*#__PURE__*/React.createElement(\"option\", {\n      key: idx,\n      value: c.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 103\n      }\n    }, \" \", c.persianName);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-xl-4 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 33\n    }\n  }, \"\\u0631\\u0627 \\u0628\\u0647 \\u0627\\u0631\\u0632 \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"currency\",\n    className: \"form-control\",\n    \"aria-describedby\": \"#convertionResult\",\n    onChange: changeCurrencyTo,\n    value: currencyTo.fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 37\n    }\n  }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\"), currencyList.map((c, idx) => {\n    return c.fullName != currencyFrom.fullName && /*#__PURE__*/React.createElement(\"option\", {\n      key: idx,\n      value: c.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 51\n      }\n    }, \" \", c.persianName);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 row mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-xl-12 mb-3 d-flex align-items-center p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    htmlFor: \"currency_amount_available\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  }, \"\\u0645\\u0648\\u062C\\u0648\\u062F\\u06CC :\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success px-2 fs-4 pt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 37\n    }\n  }, currencyAvailable), currencyFrom.symbol && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select-all-tooltip me-2\",\n    alt: \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06A9\\u0644 \\u0645\\u0648\\u062C\\u0648\\u062F\\u06CC\",\n    onClick: () => {\n      setConvertAmount(currencyAvailable);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 41\n    }\n  }, \"$\")), conversionResult != 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-10 mx-auto p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 57\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 row mb-2 mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-flex justify-content-between w-100 px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 45\n    }\n  }, \"\\u0628\\u0627 \\u067E\\u0631\\u062F\\u0627\\u062E\\u062A\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-nowrap me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success px-1 fs-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 49\n    }\n  }, convertAmount), currencyFrom.persianName), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-nowrap me-auto ms-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success px-1 fs-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 49\n    }\n  }, conversionResult), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"px-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 49\n    }\n  }, currencyTo.persianName)), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 45\n    }\n  }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u06CC \\u06A9\\u0646\\u06CC\\u062F\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 row mb-2 mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 45\n    }\n  }, \"\\u06A9\\u0627\\u0631\\u0645\\u0632\\u062F :\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success px-2 fs-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 45\n    }\n  }, karmozdAmount))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 row mb-3 mx-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    className: \"d-flex justify-content-between px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 45\n    }\n  }, \"\\u0642\\u06CC\\u0645\\u062A \\u062A\\u0645\\u0627\\u0645 \\u0634\\u062F\\u0647 \\u0647\\u0631 \\u0648\\u0627\\u062D\\u062F\", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"px-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 49\n    }\n  }, currencyTo.persianName), \":\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 45\n    }\n  }, \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success px-2 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 53\n    }\n  }, endPrice), \"  \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 111\n    }\n  }, currencyFrom.persianName))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-12 row flex-column p-0 mt-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex  align-items-end p-0 me-auto col-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"submit\",\n    className: \"btn btn-success px-5 w-100\",\n    style: {\n      lineHeight: 1\n    },\n    disabled: !convertAmount || !currencyFrom.symbol || !currencyTo.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 41\n    }\n  }, \"\\u062A\\u0628\\u062F\\u06CC\\u0644 \\u06A9\\u0646\")))))))));\n}\n\nexport default Convert;","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/jsx/element/convert.jsx"],"names":["React","useState","useContext","Link","Row","Col","Card","Tooltip","right","UserContext","get","log","useStateWithCallbackLazy","Convert","convertAmount","setConvertAmount","currencyTo","setCurrencyTo","symbol","fullName","persianName","currencyFrom","setCurrencyFrom","currencyAvailable","setCurrencyAvailable","currencyList","karmozd","user","tooltipOpen","setTooltipOpen","karmozdAmount","conversionResult","endPrice","ratio","computePrices","e","key","rate","Math","round","changeConvertAmount","enteredValue","target","value","min","changeCurrencyFrom","selectedCurrency","filter","c","idx","sym","av","Object","keys","currencies","includes","changeCurrencyTo","map","lineHeight"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\n import { Link } from 'react-router-dom';\r\nimport { Row, Col, Card, Tooltip } from 'react-bootstrap'\r\nimport { right } from '@popperjs/core';\r\nimport { UserContext } from '../UserContext';\r\nimport { get } from 'http';\r\nimport { log } from 'util';\r\nimport { useStateWithCallbackLazy } from 'use-state-with-callback';\r\n\r\n\r\n\r\nfunction Convert() {\r\n\r\n    const [convertAmount, setConvertAmount] = useStateWithCallbackLazy(0);\r\n    const [currencyTo, setCurrencyTo] = useStateWithCallbackLazy({symbol:null, fullName:null, persianName:null});\r\n    const [currencyFrom, setCurrencyFrom] = useStateWithCallbackLazy({symbol:null, fullName:null, persianName:null});\r\n    const [currencyAvailable, setCurrencyAvailable] = useState(0);\r\n    const { currencyList, karmozd, user } = useContext(UserContext);\r\n    \r\n    const [tooltipOpen, setTooltipOpen] = useState(false);\r\n    \r\n    let karmozdAmount = 0;\r\n    let conversionResult = 0;\r\n    let endPrice = 0;\r\n    const ratio = {\r\n        \"BTC-LTC\": 10,\r\n        \"BTC-MTC\": 20,\r\n        \"BTC-STC\": 30,\r\n        \"BTC-WTC\": 40\r\n    }   \r\n    \r\n    const computePrices = e=>{\r\n        \r\n        if(!currencyFrom.symbol || !currencyTo.symbol || !convertAmount) return;\r\n        let key = `${currencyFrom.symbol}-${currencyTo.symbol}`\r\n        let rate = ratio[key];\r\n        \r\n        conversionResult = Math.round(1000*(rate * convertAmount) || 0)/1000;\r\n        karmozdAmount =  Math.round(1000* karmozd * conversionResult)/ 1000 || 0;\r\n        endPrice = Math.round(1000*(convertAmount / conversionResult))/1000;\r\n    }\r\n    const changeConvertAmount = e=>{\r\n        \r\n        let enteredValue = e.target.value;\r\n        \r\n        enteredValue = Math.min(enteredValue, currencyAvailable || 999999999);\r\n        \r\n        setConvertAmount(enteredValue);\r\n\r\n    }\r\n    const changeCurrencyFrom = (e)=>{\r\n        let selectedCurrency = e.target.value;\r\n        if (!selectedCurrency) return;\r\n        selectedCurrency = currencyList.filter((c, idx)=>c.fullName==selectedCurrency)[0];\r\n        let sym = selectedCurrency.symbol;\r\n        let av = Object.keys(user.currencies).includes(sym) && user.currencies[sym] || 0;\r\n        setConvertAmount(Math.min(convertAmount, av));\r\n        setCurrencyFrom(selectedCurrency);\r\n        setCurrencyAvailable (av);   \r\n\r\n    }\r\n    const changeCurrencyTo = (e)=>{\r\n        let selectedCurrency = e.target.value;\r\n        if (!selectedCurrency) return;\r\n        selectedCurrency = currencyList.filter((c, idx)=>c.fullName==selectedCurrency)[0];\r\n        setCurrencyTo(selectedCurrency);\r\n    }\r\n    computePrices();\r\n    return (\r\n        <>\r\n            <style type=\"text/css\">\r\n                {`\r\n                    .form-label{\r\n                        padding-right: 4px;\r\n                    }\r\n                `}\r\n            </style>\r\n            \r\n            <Card>\r\n                <Card.Header >\r\n                    <Card.Title>تبدیل</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"buy-sell-widget convert-widget\">\r\n                        <form method=\"post\" name=\"myform\" className=\"currency_validate row\">\r\n                            <div className=\"mb-3 col-xl-4 mb-0\">\r\n                                <label className=\"form-label\" htmlFor=\"currency_amount\">مقدار</label>\r\n                                <input type=\"number\"  name=\"currency_amount\" className=\"form-control\" value={convertAmount} onChange={ changeConvertAmount }\r\n                                    placeholder=\"100\" />          \r\n                            </div>\r\n\r\n                            <div className=\"mb-3 col-xl-4 mb-0\">\r\n                                <label className=\"form-label\">ارز </label>\r\n                                <select name='currency' className=\"form-control\" onChange={changeCurrencyFrom} value={currencyFrom.fullName}>\r\n                                    <option value={0}>انتخاب</option>\r\n                                    { \r\n                                        currencyList.map((c, idx)=>{\r\n                                            return Object.keys(user.currencies).includes(c.symbol) && <option key={idx} value={c.fullName}> {c.persianName}</option>\r\n                                        })\r\n                                    }\r\n                                  \r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mb-3 col-xl-4 mb-0\">\r\n                                <label className=\"form-label\">را به ارز </label>\r\n                                <select name='currency' className=\"form-control\" aria-describedby={\"#convertionResult\"} onChange={changeCurrencyTo}\r\n                                 value={currencyTo.fullName}>\r\n                                    <option value={0}>انتخاب</option>\r\n                                    { \r\n                                        currencyList.map((c, idx)=>{\r\n                                            return c.fullName!=currencyFrom.fullName &&\r\n                                                  <option key={idx} value={c.fullName}> {c.persianName}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                                {/* {\r\n                                    currencyTo.symbol &&\r\n                                    <small id=\"convertionResult\" className=\"form-text text-muted\">\r\n                                        { conversionResult } {\" \"} { currencyTo.persianName } دریافت خواهید کرد\r\n                                    </small>\r\n                                } */}\r\n                            </div>\r\n\r\n                            <div className=\"col-12 row mx-0\">\r\n                                <div className=\" col-xl-12 mb-3 d-flex align-items-center p-0\">\r\n                                    <small  htmlFor=\"currency_amount_available\">موجودی :</small>\r\n                                    <span className=\"text-success px-2 fs-4 pt-1\">{currencyAvailable}</span>\r\n                                    { currencyFrom.symbol &&\r\n                                        <div className=\"select-all-tooltip me-2\" alt=\"انتخاب کل موجودی\" onClick={()=>{setConvertAmount(currencyAvailable)}}>$</div>\r\n                                    }\r\n                                </div>\r\n                                {conversionResult!=0 && <div className=\"col-10 mx-auto p-0\" >\r\n                                    \r\n                                    <div className=\"col-12 row mb-2 mx-0\">\r\n                                        \r\n                                        <small className=\"d-flex justify-content-between w-100 px-0\">\r\n                                            <span>با پرداخت</span>\r\n                                            <span className=\"text-nowrap me-2\">\r\n                                                <span className=\"text-success px-1 fs-5\">{ convertAmount}</span>\r\n                                                { currencyFrom.persianName }\r\n                                            </span>\r\n                                            <span className=\"text-nowrap me-auto ms-2\">\r\n                                                <span className=\"text-success px-1 fs-5\">{ conversionResult }</span>\r\n                                                <span className=\"px-1\">{ currencyTo.persianName }</span>\r\n                                            </span>\r\n                                            <span>\r\n                                            دریافت می کنید\r\n                                            </span>\r\n                                        </small>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 row mb-2 mx-0\">\r\n                                        <small className=\"px-0\">\r\n                                            <label>کارمزد :</label>\r\n                                            <span className=\"text-success px-2 fs-4\">{ karmozdAmount }</span>\r\n                                        </small>\r\n                                    </div>\r\n\r\n                                    <div className=\"col-12 row mb-3 mx-0\">\r\n                                        <small className=\"d-flex justify-content-between px-0\">\r\n                                            <label>قیمت تمام شده هر واحد \r\n                                                <i className=\"px-2\">{ currencyTo.persianName }</i>\r\n                                                :\r\n                                            </label>\r\n                                            <span > <span className=\"text-success px-2 \">{ endPrice }</span>  <i>{ currencyFrom.persianName}</i></span>\r\n                                        </small>\r\n                                    </div>\r\n                                    \r\n                                   \r\n                                </div>}\r\n                                <div className=\" col-12 row flex-column p-0 mt-3\">\r\n                                    <div className=\"d-flex  align-items-end p-0 me-auto col-6\">\r\n                                        <button type=\"submit\" name=\"submit\"\r\n                                            className=\"btn btn-success px-5 w-100\" style={{lineHeight: 1}} disabled={!convertAmount || !currencyFrom.symbol || !currencyTo.symbol}>تبدیل کن</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n\r\n\r\n                        </form>\r\n                    </div>\r\n    \r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default Convert;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}