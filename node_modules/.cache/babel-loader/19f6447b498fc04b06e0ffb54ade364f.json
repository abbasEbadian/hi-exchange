{"ast":null,"code":"var _jsxFileName = \"H:\\\\Projects\\\\package\\\\cheerio\\\\src\\\\jsx\\\\element\\\\convert.jsx\";\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { right } from '@popperjs/core';\nimport { UserContext } from '../UserContext';\nimport { get } from 'http';\nimport { log } from 'util';\nimport { useStateWithCallbackLazy } from 'use-state-with-callback';\n\nfunction Convert() {\n  const [convertAmount, setConvertAmount] = useStateWithCallbackLazy(0);\n  const [currencyTo, setCurrencyTo] = useStateWithCallbackLazy({\n    symbol: null,\n    fullName: null,\n    persianName: null\n  });\n  const [currencyFrom, setCurrencyFrom] = useStateWithCallbackLazy({\n    symbol: null,\n    fullName: null,\n    persianName: null\n  });\n  const [currencyAvailable, setCurrencyAvailable] = useState(0);\n  const {\n    currencyList,\n    karmozd,\n    user\n  } = useContext(UserContext);\n  let karmozdAmount = 0;\n  let conversionResult = 0;\n  const ratio = {\n    \"BTC-LTC\": 10,\n    \"BTC-MTC\": 20,\n    \"BTC-STC\": 30,\n    \"BTC-WTC\": 40\n  };\n\n  const computePrices = e => {\n    if (!currencyFrom.symbol || !currencyTo.symbol || !convertAmount) return;\n    let key = `${currencyFrom.symbol}-${currencyTo.symbol}`;\n    let rate = ratio[key];\n    conversionResult = Math.round(1000 * (rate * convertAmount) || 0) / 1000;\n    karmozdAmount = Math.round(1000 * karmozd * (convertAmount / 0.1)) / 1000 || 0;\n  };\n\n  const changeConvertAmount = e => {\n    let enteredValue = e.target.value;\n    if (currencyAvailable) enteredValue = Math.min(enteredValue, currencyAvailable);\n    setConvertAmount(enteredValue);\n  };\n\n  const changeCurrencyFrom = e => {\n    let selectedCurrency = e.target.value;\n    if (!selectedCurrency) return;\n    selectedCurrency = currencyList.filter((c, idx) => c.fullName == selectedCurrency)[0];\n    let sym = selectedCurrency.symbol;\n    let av = Object.keys(user.currencies).includes(sym) && user.currencies[sym] || 0;\n    setConvertAmount(Math.min(convertAmount, av));\n    setCurrencyFrom(selectedCurrency);\n    setCurrencyAvailable(av);\n  };\n\n  const changeCurrencyTo = e => {\n    let selectedCurrency = e.target.value;\n    if (!selectedCurrency) return;\n    selectedCurrency = currencyList.filter((c, idx) => c.fullName == selectedCurrency)[0];\n    setCurrencyTo(selectedCurrency);\n  };\n\n  computePrices();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"style\", {\n    type: \"text/css\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, `\n                    .form-label{\n                        padding-right: 4px;\n                    }\n                `), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, \"\\u062A\\u0628\\u062F\\u06CC\\u0644\")), /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buy-sell-widget\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    method: \"post\",\n    name: \"myform\",\n    className: \"currency_validate row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-xl-4 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    htmlFor: \"currency_amount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, \"\\u0645\\u0642\\u062F\\u0627\\u0631\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    pattern: \"[0-9]*\\\\.{0,1}[0-9]*\",\n    name: \"currency_amount\",\n    className: \"form-control\",\n    value: convertAmount,\n    onChange: changeConvertAmount,\n    placeholder: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-xl-4 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, \"\\u0627\\u0631\\u0632 \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"currency\",\n    className: \"form-control\",\n    onChange: changeCurrencyFrom,\n    value: currencyFrom.fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\"), currencyList.map((c, idx) => {\n    return Object.keys(user.currencies).includes(c.symbol) && /*#__PURE__*/React.createElement(\"option\", {\n      key: idx,\n      value: c.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 103\n      }\n    }, \" \", c.persianName);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3 col-xl-4 mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, \"\\u0631\\u0627 \\u0628\\u0647 \\u0627\\u0631\\u0632 \"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"currency\",\n    className: \"form-control\",\n    \"aria-describedby\": \"#convertionResult\",\n    onChange: changeCurrencyTo,\n    value: currencyTo.fullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 37\n    }\n  }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628\"), currencyList.map((c, idx) => {\n    return c.fullName != currencyFrom.fullName && /*#__PURE__*/React.createElement(\"option\", {\n      key: idx,\n      value: c.fullName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 51\n      }\n    }, \" \", c.persianName);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-8\",\n    style: {\n      paddingLeft: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 row mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-xl-6 mb-0\",\n    style: {\n      paddingLeft: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    htmlFor: \"currency_amount_available\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 45\n    }\n  }, \"\\u0645\\u0648\\u062C\\u0648\\u062F\\u06CC\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"currency_amount_available\",\n    className: \"form-control pe-none\",\n    value: currencyAvailable,\n    placeholder: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 align-items-end d-flex px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 41\n    }\n  }, currencyFrom.symbol && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn-outline-success bg-transparent  text-white px-2 py-2 me-4\",\n    onClick: e => setConvertAmount(currencyAvailable),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 53\n    }\n  }, \"\\u0627\\u0646\\u062A\\u062E\\u0627\\u0628 \\u06A9\\u0644 \\u0645\\u0648\\u062C\\u0648\\u062F\\u06CC\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 row mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-xl-6 mb-0\",\n    style: {\n      paddingLeft: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    htmlFor: \"karmozd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 45\n    }\n  }, \"\\u06A9\\u0627\\u0631\\u0645\\u0632\\u062F\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"karmozd\",\n    className: \"form-control pe-none \",\n    value: karmozdAmount,\n    placeholder: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 45\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-xl-12 row \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" col-xl-6 mb-0\",\n    style: {\n      paddingLeft: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-label\",\n    htmlFor: \"conversion-result\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 45\n    }\n  }, \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A\\u06CC \\u0634\\u0645\\u0627\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"conversion-result\",\n    className: \"form-control pe-none\",\n    value: conversionResult,\n    placeholder: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 45\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-4 align-items-end d-flex px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 41\n    }\n  }, conversionResult != 0 && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"px-3 text-white\",\n    style: {\n      height: 45 + \"px\",\n      lineHeight: 45 + \"px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 69\n    }\n  }, currencyTo.symbol)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 col-md-4 row flex-column justify-content-between p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 37\n    }\n  }, conversionResult != 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 49\n    }\n  }, \"\\u0642\\u06CC\\u0645\\u062A \\u062E\\u0631\\u06CC\\u062F \\u0647\\u0631 \", currencyTo.persianName), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-success mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 49\n    }\n  }, ratio[currencyFrom.symbol + \"-\" + currencyTo.symbol]), /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 49\n    }\n  }, \"\\u0628\\u0627 \\u067E\\u0631\\u062F\\u0627\\u062E\\u062A\", /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success px-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 53\n    }\n  }, convertAmount), currencyFrom.persianName, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success px-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 53\n    }\n  }, conversionResult), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"px-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 53\n    }\n  }, currencyTo.persianName), \"\\u062F\\u0631\\u06CC\\u0627\\u0641\\u062A \\u0645\\u06CC \\u06A9\\u0646\\u06CC\\u062F\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"d-flex justify-content-between align-items-end p-0 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 45\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    name: \"submit\",\n    className: \"btn btn-success px-5 w-100\",\n    disabled: !convertAmount || !currencyFrom.symbol || !currencyTo.symbol,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 45\n    }\n  }, \"\\u062A\\u0628\\u062F\\u06CC\\u0644 \\u06A9\\u0646\"))))))))));\n}\n\nexport default Convert;","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/jsx/element/convert.jsx"],"names":["React","useState","useContext","Link","Row","Col","Card","right","UserContext","get","log","useStateWithCallbackLazy","Convert","convertAmount","setConvertAmount","currencyTo","setCurrencyTo","symbol","fullName","persianName","currencyFrom","setCurrencyFrom","currencyAvailable","setCurrencyAvailable","currencyList","karmozd","user","karmozdAmount","conversionResult","ratio","computePrices","e","key","rate","Math","round","changeConvertAmount","enteredValue","target","value","min","changeCurrencyFrom","selectedCurrency","filter","c","idx","sym","av","Object","keys","currencies","includes","changeCurrencyTo","map","paddingLeft","height","lineHeight"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\n import { Link } from 'react-router-dom';\r\nimport { Row, Col, Card } from 'react-bootstrap'\r\nimport { right } from '@popperjs/core';\r\nimport { UserContext } from '../UserContext';\r\nimport { get } from 'http';\r\nimport { log } from 'util';\r\nimport { useStateWithCallbackLazy } from 'use-state-with-callback';\r\n\r\n\r\n\r\nfunction Convert() {\r\n\r\n    const [convertAmount, setConvertAmount] = useStateWithCallbackLazy(0);\r\n    const [currencyTo, setCurrencyTo] = useStateWithCallbackLazy({symbol:null, fullName:null, persianName:null});\r\n    const [currencyFrom, setCurrencyFrom] = useStateWithCallbackLazy({symbol:null, fullName:null, persianName:null});\r\n    const [currencyAvailable, setCurrencyAvailable] = useState(0);\r\n    const { currencyList, karmozd, user } = useContext(UserContext);\r\n    let karmozdAmount = 0;\r\n    let conversionResult = 0;\r\n    const ratio = {\r\n        \"BTC-LTC\": 10,\r\n        \"BTC-MTC\": 20,\r\n        \"BTC-STC\": 30,\r\n        \"BTC-WTC\": 40\r\n    }   \r\n    \r\n    const computePrices = e=>{\r\n        \r\n        if(!currencyFrom.symbol || !currencyTo.symbol || !convertAmount) return;\r\n        let key = `${currencyFrom.symbol}-${currencyTo.symbol}`\r\n        let rate = ratio[key];\r\n        \r\n        conversionResult = Math.round(1000*(rate * convertAmount) || 0)/1000;\r\n        karmozdAmount =  Math.round(1000* karmozd * (convertAmount / 0.1))/ 1000 || 0;\r\n    }\r\n    const changeConvertAmount = e=>{\r\n        \r\n        let enteredValue = e.target.value;\r\n        \r\n        if(currencyAvailable)\r\n            enteredValue = Math.min(enteredValue, currencyAvailable);\r\n        \r\n        setConvertAmount(enteredValue);\r\n\r\n    }\r\n    const changeCurrencyFrom = (e)=>{\r\n        let selectedCurrency = e.target.value;\r\n        if (!selectedCurrency) return;\r\n        selectedCurrency = currencyList.filter((c, idx)=>c.fullName==selectedCurrency)[0];\r\n        let sym = selectedCurrency.symbol;\r\n        let av = Object.keys(user.currencies).includes(sym) && user.currencies[sym] || 0;\r\n        setConvertAmount(Math.min(convertAmount, av));\r\n        setCurrencyFrom(selectedCurrency);\r\n        setCurrencyAvailable (av);   \r\n\r\n    }\r\n    const changeCurrencyTo = (e)=>{\r\n        let selectedCurrency = e.target.value;\r\n        if (!selectedCurrency) return;\r\n        selectedCurrency = currencyList.filter((c, idx)=>c.fullName==selectedCurrency)[0];\r\n        setCurrencyTo(selectedCurrency);\r\n    }\r\n    computePrices();\r\n    return (\r\n        <>\r\n            <style type=\"text/css\">\r\n                {`\r\n                    .form-label{\r\n                        padding-right: 4px;\r\n                    }\r\n                `}\r\n            </style>\r\n            \r\n            <Card>\r\n                <Card.Header >\r\n                    <Card.Title>تبدیل</Card.Title>\r\n                </Card.Header>\r\n                <Card.Body>\r\n                    <div className=\"buy-sell-widget\">\r\n                        <form method=\"post\" name=\"myform\" className=\"currency_validate row\">\r\n                            <div className=\"mb-3 col-xl-4 mb-0\">\r\n                                <label className=\"form-label\" htmlFor=\"currency_amount\">مقدار</label>\r\n                                <input type=\"text\" pattern=\"[0-9]*\\.{0,1}[0-9]*\" name=\"currency_amount\" className=\"form-control\" value={convertAmount} onChange={ changeConvertAmount }\r\n                                    placeholder=\"100\" />          \r\n                            </div>\r\n\r\n                            <div className=\"mb-3 col-xl-4 mb-0\">\r\n                                <label className=\"form-label\">ارز </label>\r\n                                <select name='currency' className=\"form-control\" onChange={changeCurrencyFrom} value={currencyFrom.fullName}>\r\n                                    <option value={0}>انتخاب</option>\r\n                                    { \r\n                                        currencyList.map((c, idx)=>{\r\n                                            return Object.keys(user.currencies).includes(c.symbol) && <option key={idx} value={c.fullName}> {c.persianName}</option>\r\n                                        })\r\n                                    }\r\n                                  \r\n                                </select>\r\n                            </div>\r\n                            <div className=\"mb-3 col-xl-4 mb-0\">\r\n                                <label className=\"form-label\">را به ارز </label>\r\n                                <select name='currency' className=\"form-control\" aria-describedby={\"#convertionResult\"} onChange={changeCurrencyTo}\r\n                                 value={currencyTo.fullName}>\r\n                                    <option value={0}>انتخاب</option>\r\n                                    { \r\n                                        currencyList.map((c, idx)=>{\r\n                                            return c.fullName!=currencyFrom.fullName &&\r\n                                                  <option key={idx} value={c.fullName}> {c.persianName}</option>\r\n                                        })\r\n                                    }\r\n                                </select>\r\n                                {/* {\r\n                                    currencyTo.symbol &&\r\n                                    <small id=\"convertionResult\" className=\"form-text text-muted\">\r\n                                        { conversionResult } {\" \"} { currencyTo.persianName } دریافت خواهید کرد\r\n                                    </small>\r\n                                } */}\r\n                            </div>\r\n\r\n                            <div className=\"col-12 row\">\r\n                                \r\n                                <div className=\"col-12 col-md-8\" style={{paddingLeft: 0}}>\r\n                                    <div className=\"col-12 row mb-3\">\r\n                                        <div className=\" col-xl-6 mb-0\" style={{paddingLeft: 0}}>\r\n                                            <label className=\"form-label\" htmlFor=\"currency_amount_available\">موجودی</label>\r\n                                            <input type=\"text\" name=\"currency_amount_available\" className=\"form-control pe-none\" value={currencyAvailable} \r\n                                                placeholder=\"\" /> \r\n                                        </div>\r\n                                        <div className=\"col-4 align-items-end d-flex px-0\">\r\n                                            { currencyFrom.symbol &&\r\n                                                <button type=\"button\" className=\"btn-outline-success bg-transparent  text-white px-2 py-2 me-4\" onClick={e=>setConvertAmount(currencyAvailable)}>\r\n                                                    <small>انتخاب کل موجودی</small>\r\n                                                </button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"col-12 row mb-3\">\r\n                                        <div className=\" col-xl-6 mb-0\" style={{paddingLeft: 0}}>\r\n                                            <label className=\"form-label\" htmlFor=\"karmozd\">کارمزد</label>\r\n                                            <input type=\"text\" name=\"karmozd\" className=\"form-control pe-none \" value={karmozdAmount} \r\n                                                placeholder=\"\" /> \r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\" col-xl-12 row \">\r\n                                        <div className=\" col-xl-6 mb-0\" style={{paddingLeft: 0}}>\r\n                                            <label className=\"form-label\" htmlFor=\"conversion-result\">دریافتی شما</label>\r\n                                            <input type=\"text\" name=\"conversion-result\" className=\"form-control pe-none\" value={conversionResult} \r\n                                                placeholder=\"\" /> \r\n                                        </div>\r\n                                        <div className=\"col-4 align-items-end d-flex px-0\">\r\n                                            {conversionResult!=0 && <span className=\"px-3 text-white\" style={{height: 45+\"px\", lineHeight: 45+\"px\"}}>{ currencyTo.symbol }</span>}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12 col-md-4 row flex-column justify-content-between p-0\">\r\n                                    <div className=\"col-12 p-3\">\r\n                                        { conversionResult!=0 &&\r\n                                            <div className=\"text-center\">\r\n                                                <small>قیمت خرید هر { currencyTo.persianName }</small>\r\n                                                <h1 className=\"text-success mt-4\">\r\n                                                    { ratio[currencyFrom.symbol +\"-\"+currencyTo.symbol] }\r\n                                                </h1>\r\n                                                <small>با پرداخت\r\n                                                    <span className=\"text-success px-1\">{ convertAmount}</span>\r\n                                                    { currencyFrom.persianName }\r\n                                                    <span className=\"text-success px-1\">{ conversionResult }</span>\r\n                                                    <span className=\"px-1\">{ currencyTo.persianName }</span>\r\n                                                    دریافت می کنید\r\n                                                </small>\r\n                                            </div>\r\n                                        }\r\n                                    \r\n                                    </div>\r\n                                    <div className=\"col-12 p-0\">\r\n                                        <div className=\"d-flex justify-content-between align-items-end p-0 \">\r\n                                            {/* <div className=\" col-xl-6 mb-0\" style={{paddingLeft: 0}}>\r\n                                                <label className=\"form-label\" htmlFor=\"conversion-result\">دریافتی شما</label>\r\n                                                <input type=\"text\" name=\"conversion-result\" className=\"form-control pe-none\" value={conversionResult} \r\n                                                    placeholder=\"\" /> \r\n                                            </div> */}\r\n                                            <i></i>\r\n                                            <button type=\"submit\" name=\"submit\"\r\n                                                className=\"btn btn-success px-5 w-100\" disabled={!convertAmount || !currencyFrom.symbol || !currencyTo.symbol}>تبدیل کن</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n\r\n\r\n                        </form>\r\n                    </div>\r\n    \r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default Convert;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}