{"ast":null,"code":"var _jsxFileName = \"H:\\\\Projects\\\\package\\\\cheerio\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport { indexConverter, currencies, userManager } from './redux/reducers';\nimport { sessionService } from 'redux-react-session';\nconst rootReducer = combineReducers({\n  indexConverter,\n  currencies,\n  userManager\n});\nconst store = createStore(rootReducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()));\nsessionService.initSessionService(store);\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["H:/Projects/package/cheerio/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","Provider","thunk","createStore","combineReducers","applyMiddleware","compose","indexConverter","currencies","userManager","sessionService","rootReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","initSessionService","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,SAASC,cAAT,EAAyBC,UAAzB,EAAqCC,WAArC,QAAwD,kBAAxD;AACA,SAAQC,cAAR,QAA6B,qBAA7B;AAEA,MAAMC,WAAW,GAAGP,eAAe,CAAC;AAChCG,EAAAA,cADgC;AAEhCC,EAAAA,UAFgC;AAGhCC,EAAAA;AAHgC,CAAD,CAAnC;AAMA,MAAMG,KAAK,GAAGT,WAAW,CAACQ,WAAD,EACrBL,OAAO,CACPD,eAAe,CAACH,KAAD,CADR,EAEPW,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAFhC,CADc,CAAzB;AAKAJ,cAAc,CAACK,kBAAf,CAAkCH,KAAlC;AACAd,QAAQ,CAACkB,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ,EAKEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,E,CAOA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport { indexConverter, currencies, userManager } from './redux/reducers'\r\nimport {sessionService} from 'redux-react-session'\r\n \r\nconst rootReducer = combineReducers({\r\n    indexConverter,\r\n    currencies,\r\n    userManager\r\n});\r\n\r\nconst store = createStore(rootReducer,\r\n    compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n    );\r\nsessionService.initSessionService(store)\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"]},"metadata":{},"sourceType":"module"}